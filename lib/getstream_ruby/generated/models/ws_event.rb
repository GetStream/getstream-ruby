# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # Represents an BaseEvent that happened in Stream Chat
      class WSEvent < GetStream::BaseModel

        # Model attributes
        # @!attribute created_at
        #   @return [DateTime]
        attr_accessor :created_at
        # @!attribute type
        #   @return [String]
        attr_accessor :type
        # @!attribute custom
        #   @return [Object]
        attr_accessor :custom
        # @!attribute automoderation
        #   @return [Boolean]
        attr_accessor :automoderation
        # @!attribute channel_id
        #   @return [String]
        attr_accessor :channel_id
        # @!attribute channel_last_message_at
        #   @return [DateTime]
        attr_accessor :channel_last_message_at
        # @!attribute channel_type
        #   @return [String]
        attr_accessor :channel_type
        # @!attribute cid
        #   @return [String]
        attr_accessor :cid
        # @!attribute connection_id
        #   @return [String]
        attr_accessor :connection_id
        # @!attribute parent_id
        #   @return [String]
        attr_accessor :parent_id
        # @!attribute reason
        #   @return [String]
        attr_accessor :reason
        # @!attribute team
        #   @return [String]
        attr_accessor :team
        # @!attribute thread_id
        #   @return [String]
        attr_accessor :thread_id
        # @!attribute user_id
        #   @return [String]
        attr_accessor :user_id
        # @!attribute watcher_count
        #   @return [Integer]
        attr_accessor :watcher_count
        # @!attribute automoderation_scores
        #   @return [ModerationResponse]
        attr_accessor :automoderation_scores
        # @!attribute channel
        #   @return [ChannelResponse]
        attr_accessor :channel
        # @!attribute created_by
        #   @return [UserResponse]
        attr_accessor :created_by
        # @!attribute me
        #   @return [OwnUserResponse]
        attr_accessor :me
        # @!attribute member
        #   @return [ChannelMember]
        attr_accessor :member
        # @!attribute message
        #   @return [MessageResponse]
        attr_accessor :message
        # @!attribute message_update
        #   @return [MessageUpdate]
        attr_accessor :message_update
        # @!attribute poll
        #   @return [PollResponseData]
        attr_accessor :poll
        # @!attribute poll_vote
        #   @return [PollVoteResponseData]
        attr_accessor :poll_vote
        # @!attribute reaction
        #   @return [ReactionResponse]
        attr_accessor :reaction
        # @!attribute thread
        #   @return [ThreadResponse]
        attr_accessor :thread
        # @!attribute user
        #   @return [UserResponse]
        attr_accessor :user

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @created_at = attributes[:created_at] || attributes['created_at']
          @type = attributes[:type] || attributes['type']
          @custom = attributes[:custom] || attributes['custom']
          @automoderation = attributes[:automoderation] || attributes['automoderation'] || false
          @channel_id = attributes[:channel_id] || attributes['channel_id'] || ""
          @channel_last_message_at = attributes[:channel_last_message_at] || attributes['channel_last_message_at'] || nil
          @channel_type = attributes[:channel_type] || attributes['channel_type'] || ""
          @cid = attributes[:cid] || attributes['cid'] || ""
          @connection_id = attributes[:connection_id] || attributes['connection_id'] || ""
          @parent_id = attributes[:parent_id] || attributes['parent_id'] || ""
          @reason = attributes[:reason] || attributes['reason'] || ""
          @team = attributes[:team] || attributes['team'] || ""
          @thread_id = attributes[:thread_id] || attributes['thread_id'] || ""
          @user_id = attributes[:user_id] || attributes['user_id'] || ""
          @watcher_count = attributes[:watcher_count] || attributes['watcher_count'] || 0
          @automoderation_scores = attributes[:automoderation_scores] || attributes['automoderation_scores'] || nil
          @channel = attributes[:channel] || attributes['channel'] || nil
          @created_by = attributes[:created_by] || attributes['created_by'] || nil
          @me = attributes[:me] || attributes['me'] || nil
          @member = attributes[:member] || attributes['member'] || nil
          @message = attributes[:message] || attributes['message'] || nil
          @message_update = attributes[:message_update] || attributes['message_update'] || nil
          @poll = attributes[:poll] || attributes['poll'] || nil
          @poll_vote = attributes[:poll_vote] || attributes['poll_vote'] || nil
          @reaction = attributes[:reaction] || attributes['reaction'] || nil
          @thread = attributes[:thread] || attributes['thread'] || nil
          @user = attributes[:user] || attributes['user'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            created_at: 'created_at',
            type: 'type',
            custom: 'custom',
            automoderation: 'automoderation',
            channel_id: 'channel_id',
            channel_last_message_at: 'channel_last_message_at',
            channel_type: 'channel_type',
            cid: 'cid',
            connection_id: 'connection_id',
            parent_id: 'parent_id',
            reason: 'reason',
            team: 'team',
            thread_id: 'thread_id',
            user_id: 'user_id',
            watcher_count: 'watcher_count',
            automoderation_scores: 'automoderation_scores',
            channel: 'channel',
            created_by: 'created_by',
            me: 'me',
            member: 'member',
            message: 'message',
            message_update: 'message_update',
            poll: 'poll',
            poll_vote: 'poll_vote',
            reaction: 'reaction',
            thread: 'thread',
            user: 'user'
          }
        end
      end
    end
  end
end
