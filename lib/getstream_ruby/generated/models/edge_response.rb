# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

require_relative "../../base_model"

module GetStream
  module Generated
    module Models
      # 
      class EdgeResponse < GetStream::BaseModel

        # Model attributes
        attr_accessor :_id
        attr_accessor :continent_code
        attr_accessor :country_iso_code
        attr_accessor :green
        attr_accessor :latency_test_url
        attr_accessor :latitude
        attr_accessor :longitude
        attr_accessor :red
        attr_accessor :subdivision_iso_code
        attr_accessor :yellow

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @_id = attributes[:_id] || attributes["id"]
          @continent_code = attributes[:continent_code] || attributes["continent_code"]
          @country_iso_code = attributes[:country_iso_code] || attributes["country_iso_code"]
          @green = attributes[:green] || attributes["green"]
          @latency_test_url = attributes[:latency_test_url] || attributes["latency_test_url"]
          @latitude = attributes[:latitude] || attributes["latitude"]
          @longitude = attributes[:longitude] || attributes["longitude"]
          @red = attributes[:red] || attributes["red"]
          @subdivision_iso_code = attributes[:subdivision_iso_code] || attributes["subdivision_iso_code"]
          @yellow = attributes[:yellow] || attributes["yellow"]
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            _id: "id",
            continent_code: "continent_code",
            country_iso_code: "country_iso_code",
            green: "green",
            latency_test_url: "latency_test_url",
            latitude: "latitude",
            longitude: "longitude",
            red: "red",
            subdivision_iso_code: "subdivision_iso_code",
            yellow: "yellow"
          }
        end
      end
    end
  end
end
