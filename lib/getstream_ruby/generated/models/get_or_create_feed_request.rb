# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # Client request
      class GetOrCreateFeedRequest < GetStream::BaseModel

        # Model attributes
        # @!attribute limit
        #   @return [Integer]
        attr_accessor :limit
        # @!attribute next
        #   @return [String]
        attr_accessor :next
        # @!attribute prev
        #   @return [String]
        attr_accessor :prev
        # @!attribute user_id
        #   @return [String]
        attr_accessor :user_id
        # @!attribute view
        #   @return [String]
        attr_accessor :view
        # @!attribute watch
        #   @return [Boolean]
        attr_accessor :watch
        # @!attribute activity_selector_options
        #   @return [Object]
        attr_accessor :activity_selector_options
        # @!attribute data
        #   @return [FeedInput]
        attr_accessor :data
        # @!attribute external_ranking
        #   @return [Object]
        attr_accessor :external_ranking
        # @!attribute filter
        #   @return [Object]
        attr_accessor :filter
        # @!attribute followers_pagination
        #   @return [PagerRequest]
        attr_accessor :followers_pagination
        # @!attribute following_pagination
        #   @return [PagerRequest]
        attr_accessor :following_pagination
        # @!attribute interest_weights
        #   @return [Hash<String, Float>]
        attr_accessor :interest_weights
        # @!attribute member_pagination
        #   @return [PagerRequest]
        attr_accessor :member_pagination
        # @!attribute user
        #   @return [UserRequest]
        attr_accessor :user

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @limit = attributes[:limit] || attributes['limit'] || 0
          @next = attributes[:next] || attributes['next'] || ""
          @prev = attributes[:prev] || attributes['prev'] || ""
          @user_id = attributes[:user_id] || attributes['user_id'] || ""
          @view = attributes[:view] || attributes['view'] || ""
          @watch = attributes[:watch] || attributes['watch'] || false
          @activity_selector_options = attributes[:activity_selector_options] || attributes['activity_selector_options'] || nil
          @data = attributes[:data] || attributes['data'] || nil
          @external_ranking = attributes[:external_ranking] || attributes['external_ranking'] || nil
          @filter = attributes[:filter] || attributes['filter'] || nil
          @followers_pagination = attributes[:followers_pagination] || attributes['followers_pagination'] || nil
          @following_pagination = attributes[:following_pagination] || attributes['following_pagination'] || nil
          @interest_weights = attributes[:interest_weights] || attributes['interest_weights'] || nil
          @member_pagination = attributes[:member_pagination] || attributes['member_pagination'] || nil
          @user = attributes[:user] || attributes['user'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            limit: 'limit',
            next: 'next',
            prev: 'prev',
            user_id: 'user_id',
            view: 'view',
            watch: 'watch',
            activity_selector_options: 'activity_selector_options',
            data: 'data',
            external_ranking: 'external_ranking',
            filter: 'filter',
            followers_pagination: 'followers_pagination',
            following_pagination: 'following_pagination',
            interest_weights: 'interest_weights',
            member_pagination: 'member_pagination',
            user: 'user'
          }
        end
      end
    end
  end
end
