# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

require_relative "../../base_model"

module GetStream
  module Generated
    module Models
      # A comment with an optional, depthâ€‘limited slice of nested replies.
      class ThreadedCommentResponse < GetStream::BaseModel

        # Model attributes
        attr_accessor :_id
        attr_accessor :confidence_score
        attr_accessor :created_at
        attr_accessor :downvote_count
        attr_accessor :object_id
        attr_accessor :object_type
        attr_accessor :reaction_count
        attr_accessor :reply_count
        attr_accessor :score
        attr_accessor :status
        attr_accessor :updated_at
        attr_accessor :upvote_count
        attr_accessor :mentioned_users
        attr_accessor :own_reactions
        attr_accessor :user
        attr_accessor :controversy_score
        attr_accessor :deleted_at
        attr_accessor :parent_id
        attr_accessor :text
        attr_accessor :attachments
        attr_accessor :latest_reactions
        attr_accessor :replies  # Slice of nested comments (may be empty).
        attr_accessor :custom
        attr_accessor :meta
        attr_accessor :moderation
        attr_accessor :reaction_groups

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @_id = attributes[:_id] || attributes["id"]
          @confidence_score = attributes[:confidence_score] || attributes["confidence_score"]
          @created_at = attributes[:created_at] || attributes["created_at"]
          @downvote_count = attributes[:downvote_count] || attributes["downvote_count"]
          @object_id = attributes[:object_id] || attributes["object_id"]
          @object_type = attributes[:object_type] || attributes["object_type"]
          @reaction_count = attributes[:reaction_count] || attributes["reaction_count"]
          @reply_count = attributes[:reply_count] || attributes["reply_count"]
          @score = attributes[:score] || attributes["score"]
          @status = attributes[:status] || attributes["status"]
          @updated_at = attributes[:updated_at] || attributes["updated_at"]
          @upvote_count = attributes[:upvote_count] || attributes["upvote_count"]
          @mentioned_users = attributes[:mentioned_users] || attributes["mentioned_users"]
          @own_reactions = attributes[:own_reactions] || attributes["own_reactions"]
          @user = attributes[:user] || attributes["user"]
          @controversy_score = attributes[:controversy_score] || attributes["controversy_score"] || 0.0
          @deleted_at = attributes[:deleted_at] || attributes["deleted_at"] || nil
          @parent_id = attributes[:parent_id] || attributes["parent_id"] || ""
          @text = attributes[:text] || attributes["text"] || ""
          @attachments = attributes[:attachments] || attributes["attachments"] || nil
          @latest_reactions = attributes[:latest_reactions] || attributes["latest_reactions"] || nil
          @replies = attributes[:replies] || attributes["replies"] || nil
          @custom = attributes[:custom] || attributes["custom"] || nil
          @meta = attributes[:meta] || attributes["meta"] || nil
          @moderation = attributes[:moderation] || attributes["moderation"] || nil
          @reaction_groups = attributes[:reaction_groups] || attributes["reaction_groups"] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            _id: "id",
            confidence_score: "confidence_score",
            created_at: "created_at",
            downvote_count: "downvote_count",
            object_id: "object_id",
            object_type: "object_type",
            reaction_count: "reaction_count",
            reply_count: "reply_count",
            score: "score",
            status: "status",
            updated_at: "updated_at",
            upvote_count: "upvote_count",
            mentioned_users: "mentioned_users",
            own_reactions: "own_reactions",
            user: "user",
            controversy_score: "controversy_score",
            deleted_at: "deleted_at",
            parent_id: "parent_id",
            text: "text",
            attachments: "attachments",
            latest_reactions: "latest_reactions",
            replies: "replies",
            custom: "custom",
            meta: "meta",
            moderation: "moderation",
            reaction_groups: "reaction_groups"
          }
        end
      end
    end
  end
end
