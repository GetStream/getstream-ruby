# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # A comment with an optional, depthâ€‘limited slice of nested replies.
      class ThreadedCommentResponse < GetStream::BaseModel

        # Model attributes
        # @!attribute _id
        #   @return [String]
        attr_accessor :_id
        # @!attribute confidence_score
        #   @return [Float]
        attr_accessor :confidence_score
        # @!attribute created_at
        #   @return [DateTime]
        attr_accessor :created_at
        # @!attribute downvote_count
        #   @return [Integer]
        attr_accessor :downvote_count
        # @!attribute object_id
        #   @return [String]
        attr_accessor :object_id
        # @!attribute object_type
        #   @return [String]
        attr_accessor :object_type
        # @!attribute reaction_count
        #   @return [Integer]
        attr_accessor :reaction_count
        # @!attribute reply_count
        #   @return [Integer]
        attr_accessor :reply_count
        # @!attribute score
        #   @return [Integer]
        attr_accessor :score
        # @!attribute status
        #   @return [String]
        attr_accessor :status
        # @!attribute updated_at
        #   @return [DateTime]
        attr_accessor :updated_at
        # @!attribute upvote_count
        #   @return [Integer]
        attr_accessor :upvote_count
        # @!attribute mentioned_users
        #   @return [Array<UserResponse>]
        attr_accessor :mentioned_users
        # @!attribute own_reactions
        #   @return [Array<FeedsReactionResponse>]
        attr_accessor :own_reactions
        # @!attribute user
        #   @return [UserResponse]
        attr_accessor :user
        # @!attribute controversy_score
        #   @return [Float]
        attr_accessor :controversy_score
        # @!attribute deleted_at
        #   @return [DateTime]
        attr_accessor :deleted_at
        # @!attribute parent_id
        #   @return [String]
        attr_accessor :parent_id
        # @!attribute text
        #   @return [String]
        attr_accessor :text
        # @!attribute attachments
        #   @return [Array<Attachment>]
        attr_accessor :attachments
        # @!attribute latest_reactions
        #   @return [Array<FeedsReactionResponse>]
        attr_accessor :latest_reactions
        # @!attribute replies
        #   @return [Array<ThreadedCommentResponse>] Slice of nested comments (may be empty).
        attr_accessor :replies
        # @!attribute custom
        #   @return [Object]
        attr_accessor :custom
        # @!attribute meta
        #   @return [RepliesMeta]
        attr_accessor :meta
        # @!attribute moderation
        #   @return [ModerationV2Response]
        attr_accessor :moderation
        # @!attribute reaction_groups
        #   @return [Hash<String, ReactionGroupResponse>]
        attr_accessor :reaction_groups

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @_id = attributes[:_id] || attributes['id']
          @confidence_score = attributes[:confidence_score] || attributes['confidence_score']
          @created_at = attributes[:created_at] || attributes['created_at']
          @downvote_count = attributes[:downvote_count] || attributes['downvote_count']
          @object_id = attributes[:object_id] || attributes['object_id']
          @object_type = attributes[:object_type] || attributes['object_type']
          @reaction_count = attributes[:reaction_count] || attributes['reaction_count']
          @reply_count = attributes[:reply_count] || attributes['reply_count']
          @score = attributes[:score] || attributes['score']
          @status = attributes[:status] || attributes['status']
          @updated_at = attributes[:updated_at] || attributes['updated_at']
          @upvote_count = attributes[:upvote_count] || attributes['upvote_count']
          @mentioned_users = attributes[:mentioned_users] || attributes['mentioned_users']
          @own_reactions = attributes[:own_reactions] || attributes['own_reactions']
          @user = attributes[:user] || attributes['user']
          @controversy_score = attributes[:controversy_score] || attributes['controversy_score'] || 0.0
          @deleted_at = attributes[:deleted_at] || attributes['deleted_at'] || nil
          @parent_id = attributes[:parent_id] || attributes['parent_id'] || ""
          @text = attributes[:text] || attributes['text'] || ""
          @attachments = attributes[:attachments] || attributes['attachments'] || nil
          @latest_reactions = attributes[:latest_reactions] || attributes['latest_reactions'] || nil
          @replies = attributes[:replies] || attributes['replies'] || nil
          @custom = attributes[:custom] || attributes['custom'] || nil
          @meta = attributes[:meta] || attributes['meta'] || nil
          @moderation = attributes[:moderation] || attributes['moderation'] || nil
          @reaction_groups = attributes[:reaction_groups] || attributes['reaction_groups'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            _id: 'id',
            confidence_score: 'confidence_score',
            created_at: 'created_at',
            downvote_count: 'downvote_count',
            object_id: 'object_id',
            object_type: 'object_type',
            reaction_count: 'reaction_count',
            reply_count: 'reply_count',
            score: 'score',
            status: 'status',
            updated_at: 'updated_at',
            upvote_count: 'upvote_count',
            mentioned_users: 'mentioned_users',
            own_reactions: 'own_reactions',
            user: 'user',
            controversy_score: 'controversy_score',
            deleted_at: 'deleted_at',
            parent_id: 'parent_id',
            text: 'text',
            attachments: 'attachments',
            latest_reactions: 'latest_reactions',
            replies: 'replies',
            custom: 'custom',
            meta: 'meta',
            moderation: 'moderation',
            reaction_groups: 'reaction_groups'
          }
        end
      end
    end
  end
end
