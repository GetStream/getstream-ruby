# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

require_relative "../../base_model"

module GetStream
  module Generated
    module Models
      # 
      class UpsertConfigRequest < GetStream::BaseModel

        # Model attributes
        attr_accessor :key  # Unique identifier for the moderation configuration
        attr_accessor :async  # Whether moderation should be performed asynchronously
        attr_accessor :team  # Team associated with the configuration
        attr_accessor :user_id
        attr_accessor :ai_image_config
        attr_accessor :ai_text_config
        attr_accessor :ai_video_config
        attr_accessor :automod_platform_circumvention_config
        attr_accessor :automod_semantic_filters_config
        attr_accessor :automod_toxicity_config
        attr_accessor :aws_rekognition_config
        attr_accessor :block_list_config
        attr_accessor :bodyguard_config
        attr_accessor :google_vision_config
        attr_accessor :llm_config
        attr_accessor :rule_builder_config
        attr_accessor :user
        attr_accessor :velocity_filter_config
        attr_accessor :video_call_rule_config

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @key = attributes[:key] || attributes["key"]
          @async = attributes[:async] || attributes["async"] || false
          @team = attributes[:team] || attributes["team"] || ""
          @user_id = attributes[:user_id] || attributes["user_id"] || ""
          @ai_image_config = attributes[:ai_image_config] || attributes["ai_image_config"] || nil
          @ai_text_config = attributes[:ai_text_config] || attributes["ai_text_config"] || nil
          @ai_video_config = attributes[:ai_video_config] || attributes["ai_video_config"] || nil
          @automod_platform_circumvention_config = attributes[:automod_platform_circumvention_config] || attributes["automod_platform_circumvention_config"] || nil
          @automod_semantic_filters_config = attributes[:automod_semantic_filters_config] || attributes["automod_semantic_filters_config"] || nil
          @automod_toxicity_config = attributes[:automod_toxicity_config] || attributes["automod_toxicity_config"] || nil
          @aws_rekognition_config = attributes[:aws_rekognition_config] || attributes["aws_rekognition_config"] || nil
          @block_list_config = attributes[:block_list_config] || attributes["block_list_config"] || nil
          @bodyguard_config = attributes[:bodyguard_config] || attributes["bodyguard_config"] || nil
          @google_vision_config = attributes[:google_vision_config] || attributes["google_vision_config"] || nil
          @llm_config = attributes[:llm_config] || attributes["llm_config"] || nil
          @rule_builder_config = attributes[:rule_builder_config] || attributes["rule_builder_config"] || nil
          @user = attributes[:user] || attributes["user"] || nil
          @velocity_filter_config = attributes[:velocity_filter_config] || attributes["velocity_filter_config"] || nil
          @video_call_rule_config = attributes[:video_call_rule_config] || attributes["video_call_rule_config"] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            key: "key",
            async: "async",
            team: "team",
            user_id: "user_id",
            ai_image_config: "ai_image_config",
            ai_text_config: "ai_text_config",
            ai_video_config: "ai_video_config",
            automod_platform_circumvention_config: "automod_platform_circumvention_config",
            automod_semantic_filters_config: "automod_semantic_filters_config",
            automod_toxicity_config: "automod_toxicity_config",
            aws_rekognition_config: "aws_rekognition_config",
            block_list_config: "block_list_config",
            bodyguard_config: "bodyguard_config",
            google_vision_config: "google_vision_config",
            llm_config: "llm_config",
            rule_builder_config: "rule_builder_config",
            user: "user",
            velocity_filter_config: "velocity_filter_config",
            video_call_rule_config: "video_call_rule_config"
          }
        end
      end
    end
  end
end
