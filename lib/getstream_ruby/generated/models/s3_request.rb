# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

require_relative "../../base_model"

module GetStream
  module Generated
    module Models
      # Config for creating Amazon S3 storage.
      class S3Request < GetStream::BaseModel

        # Model attributes
        attr_accessor :s3_region  # The AWS region where the bucket is hosted
        attr_accessor :s3_api_key  # The AWS API key. To use Amazon S3 as your storage provider, you have two authentication options: IAM role or API key. If you do not specify the `s3_api_key` parameter, Stream will use IAM role authentication. In that case make sure to have the correct IAM role configured for your application.
        attr_accessor :s3_custom_endpoint_url  # The custom endpoint for S3. If you want to use a custom endpoint, you must also provide the `s3_api_key` and `s3_secret` parameters.
        attr_accessor :s3_secret  # The AWS API Secret

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @s3_region = attributes[:s3_region] || attributes["s3_region"]
          @s3_api_key = attributes[:s3_api_key] || attributes["s3_api_key"] || ""
          @s3_custom_endpoint_url = attributes[:s3_custom_endpoint_url] || attributes["s3_custom_endpoint_url"] || ""
          @s3_secret = attributes[:s3_secret] || attributes["s3_secret"] || ""
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            s3_region: "s3_region",
            s3_api_key: "s3_api_key",
            s3_custom_endpoint_url: "s3_custom_endpoint_url",
            s3_secret: "s3_secret"
          }
        end
      end
    end
  end
end
