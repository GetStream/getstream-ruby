# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

require_relative "../../base_model"

module GetStream
  module Generated
    module Models
      # Represents any chat message
      class MessageResponse < GetStream::BaseModel

        # Model attributes
        attr_accessor :_id  # Message ID is unique string identifier of the message
        attr_accessor :_type  # Contains type of the message
        attr_accessor :cid  # Channel unique identifier in <type>:<id> format
        attr_accessor :created_at  # Date/time of creation
        attr_accessor :deleted_reply_count
        attr_accessor :html  # Contains HTML markup of the message. Can only be set when using server-side API
        attr_accessor :pinned  # Whether message is pinned or not
        attr_accessor :reply_count  # Number of replies to this message
        attr_accessor :shadowed  # Whether the message was shadowed or not
        attr_accessor :silent  # Whether message is silent or not
        attr_accessor :text  # Text of the message. Should be empty if `mml` is provided
        attr_accessor :updated_at  # Date/time of the last update
        attr_accessor :attachments  # Array of message attachments
        attr_accessor :latest_reactions  # List of 10 latest reactions to this message
        attr_accessor :mentioned_users  # List of mentioned users
        attr_accessor :own_reactions  # List of 10 latest reactions of authenticated user to this message
        attr_accessor :restricted_visibility  # A list of user ids that have restricted visibility to the message, if the list is not empty, the message is only visible to the users in the list
        attr_accessor :custom
        attr_accessor :reaction_counts  # An object containing number of reactions of each type. Key: reaction type (string), value: number of reactions (int)
        attr_accessor :reaction_scores  # An object containing scores of reactions of each type. Key: reaction type (string), value: total score of reactions (int)
        attr_accessor :user
        attr_accessor :command  # Contains provided slash command
        attr_accessor :deleted_at  # Date/time of deletion
        attr_accessor :deleted_for_me
        attr_accessor :message_text_updated_at
        attr_accessor :mml  # Should be empty if `text` is provided. Can only be set when using server-side API
        attr_accessor :parent_id  # ID of parent message (thread)
        attr_accessor :pin_expires  # Date when pinned message expires
        attr_accessor :pinned_at  # Date when message got pinned
        attr_accessor :poll_id  # Identifier of the poll to include in the message
        attr_accessor :quoted_message_id
        attr_accessor :show_in_channel  # Whether thread reply should be shown in the channel as well
        attr_accessor :thread_participants  # List of users who participate in thread
        attr_accessor :draft
        attr_accessor :i18n  # Object with translations. Key `language` contains the original language key. Other keys contain translations
        attr_accessor :image_labels  # Contains image moderation information
        attr_accessor :member
        attr_accessor :moderation
        attr_accessor :pinned_by
        attr_accessor :poll
        attr_accessor :quoted_message
        attr_accessor :reaction_groups
        attr_accessor :reminder
        attr_accessor :shared_location

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @_id = attributes[:_id] || attributes["id"]
          @_type = attributes[:_type] || attributes["type"]
          @cid = attributes[:cid] || attributes["cid"]
          @created_at = attributes[:created_at] || attributes["created_at"]
          @deleted_reply_count = attributes[:deleted_reply_count] || attributes["deleted_reply_count"]
          @html = attributes[:html] || attributes["html"]
          @pinned = attributes[:pinned] || attributes["pinned"]
          @reply_count = attributes[:reply_count] || attributes["reply_count"]
          @shadowed = attributes[:shadowed] || attributes["shadowed"]
          @silent = attributes[:silent] || attributes["silent"]
          @text = attributes[:text] || attributes["text"]
          @updated_at = attributes[:updated_at] || attributes["updated_at"]
          @attachments = attributes[:attachments] || attributes["attachments"]
          @latest_reactions = attributes[:latest_reactions] || attributes["latest_reactions"]
          @mentioned_users = attributes[:mentioned_users] || attributes["mentioned_users"]
          @own_reactions = attributes[:own_reactions] || attributes["own_reactions"]
          @restricted_visibility = attributes[:restricted_visibility] || attributes["restricted_visibility"]
          @custom = attributes[:custom] || attributes["custom"]
          @reaction_counts = attributes[:reaction_counts] || attributes["reaction_counts"]
          @reaction_scores = attributes[:reaction_scores] || attributes["reaction_scores"]
          @user = attributes[:user] || attributes["user"]
          @command = attributes[:command] || attributes["command"] || ""
          @deleted_at = attributes[:deleted_at] || attributes["deleted_at"] || nil
          @deleted_for_me = attributes[:deleted_for_me] || attributes["deleted_for_me"] || false
          @message_text_updated_at = attributes[:message_text_updated_at] || attributes["message_text_updated_at"] || nil
          @mml = attributes[:mml] || attributes["mml"] || ""
          @parent_id = attributes[:parent_id] || attributes["parent_id"] || ""
          @pin_expires = attributes[:pin_expires] || attributes["pin_expires"] || nil
          @pinned_at = attributes[:pinned_at] || attributes["pinned_at"] || nil
          @poll_id = attributes[:poll_id] || attributes["poll_id"] || ""
          @quoted_message_id = attributes[:quoted_message_id] || attributes["quoted_message_id"] || ""
          @show_in_channel = attributes[:show_in_channel] || attributes["show_in_channel"] || false
          @thread_participants = attributes[:thread_participants] || attributes["thread_participants"] || nil
          @draft = attributes[:draft] || attributes["draft"] || nil
          @i18n = attributes[:i18n] || attributes["i18n"] || nil
          @image_labels = attributes[:image_labels] || attributes["image_labels"] || nil
          @member = attributes[:member] || attributes["member"] || nil
          @moderation = attributes[:moderation] || attributes["moderation"] || nil
          @pinned_by = attributes[:pinned_by] || attributes["pinned_by"] || nil
          @poll = attributes[:poll] || attributes["poll"] || nil
          @quoted_message = attributes[:quoted_message] || attributes["quoted_message"] || nil
          @reaction_groups = attributes[:reaction_groups] || attributes["reaction_groups"] || nil
          @reminder = attributes[:reminder] || attributes["reminder"] || nil
          @shared_location = attributes[:shared_location] || attributes["shared_location"] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            _id: "id",
            _type: "type",
            cid: "cid",
            created_at: "created_at",
            deleted_reply_count: "deleted_reply_count",
            html: "html",
            pinned: "pinned",
            reply_count: "reply_count",
            shadowed: "shadowed",
            silent: "silent",
            text: "text",
            updated_at: "updated_at",
            attachments: "attachments",
            latest_reactions: "latest_reactions",
            mentioned_users: "mentioned_users",
            own_reactions: "own_reactions",
            restricted_visibility: "restricted_visibility",
            custom: "custom",
            reaction_counts: "reaction_counts",
            reaction_scores: "reaction_scores",
            user: "user",
            command: "command",
            deleted_at: "deleted_at",
            deleted_for_me: "deleted_for_me",
            message_text_updated_at: "message_text_updated_at",
            mml: "mml",
            parent_id: "parent_id",
            pin_expires: "pin_expires",
            pinned_at: "pinned_at",
            poll_id: "poll_id",
            quoted_message_id: "quoted_message_id",
            show_in_channel: "show_in_channel",
            thread_participants: "thread_participants",
            draft: "draft",
            i18n: "i18n",
            image_labels: "image_labels",
            member: "member",
            moderation: "moderation",
            pinned_by: "pinned_by",
            poll: "poll",
            quoted_message: "quoted_message",
            reaction_groups: "reaction_groups",
            reminder: "reminder",
            shared_location: "shared_location"
          }
        end
      end
    end
  end
end
