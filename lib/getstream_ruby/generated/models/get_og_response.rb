# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class GetOGResponse < GetStream::BaseModel

        # Model attributes
        # @!attribute duration
        #   @return [String]
        attr_accessor :duration
        # @!attribute custom
        #   @return [Object]
        attr_accessor :custom
        # @!attribute asset_url
        #   @return [String] URL of detected video or audio
        attr_accessor :asset_url
        # @!attribute author_icon
        #   @return [String]
        attr_accessor :author_icon
        # @!attribute author_link
        #   @return [String] og:site
        attr_accessor :author_link
        # @!attribute author_name
        #   @return [String] og:site_name
        attr_accessor :author_name
        # @!attribute color
        #   @return [String]
        attr_accessor :color
        # @!attribute fallback
        #   @return [String]
        attr_accessor :fallback
        # @!attribute footer
        #   @return [String]
        attr_accessor :footer
        # @!attribute footer_icon
        #   @return [String]
        attr_accessor :footer_icon
        # @!attribute image_url
        #   @return [String] URL of detected image
        attr_accessor :image_url
        # @!attribute og_scrape_url
        #   @return [String] extracted url from the text
        attr_accessor :og_scrape_url
        # @!attribute original_height
        #   @return [Integer]
        attr_accessor :original_height
        # @!attribute original_width
        #   @return [Integer]
        attr_accessor :original_width
        # @!attribute pretext
        #   @return [String]
        attr_accessor :pretext
        # @!attribute text
        #   @return [String] og:description
        attr_accessor :text
        # @!attribute thumb_url
        #   @return [String] URL of detected thumb image
        attr_accessor :thumb_url
        # @!attribute title
        #   @return [String] og:title
        attr_accessor :title
        # @!attribute title_link
        #   @return [String] og:url
        attr_accessor :title_link
        # @!attribute type
        #   @return [String] Attachment type, could be empty, image, audio or video
        attr_accessor :type
        # @!attribute actions
        #   @return [Array<Action>]
        attr_accessor :actions
        # @!attribute fields
        #   @return [Array<Field>]
        attr_accessor :fields
        # @!attribute giphy
        #   @return [Images]
        attr_accessor :giphy

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @duration = attributes[:duration] || attributes['duration']
          @custom = attributes[:custom] || attributes['custom']
          @asset_url = attributes[:asset_url] || attributes['asset_url'] || ""
          @author_icon = attributes[:author_icon] || attributes['author_icon'] || ""
          @author_link = attributes[:author_link] || attributes['author_link'] || ""
          @author_name = attributes[:author_name] || attributes['author_name'] || ""
          @color = attributes[:color] || attributes['color'] || ""
          @fallback = attributes[:fallback] || attributes['fallback'] || ""
          @footer = attributes[:footer] || attributes['footer'] || ""
          @footer_icon = attributes[:footer_icon] || attributes['footer_icon'] || ""
          @image_url = attributes[:image_url] || attributes['image_url'] || ""
          @og_scrape_url = attributes[:og_scrape_url] || attributes['og_scrape_url'] || ""
          @original_height = attributes[:original_height] || attributes['original_height'] || 0
          @original_width = attributes[:original_width] || attributes['original_width'] || 0
          @pretext = attributes[:pretext] || attributes['pretext'] || ""
          @text = attributes[:text] || attributes['text'] || ""
          @thumb_url = attributes[:thumb_url] || attributes['thumb_url'] || ""
          @title = attributes[:title] || attributes['title'] || ""
          @title_link = attributes[:title_link] || attributes['title_link'] || ""
          @type = attributes[:type] || attributes['type'] || ""
          @actions = attributes[:actions] || attributes['actions'] || nil
          @fields = attributes[:fields] || attributes['fields'] || nil
          @giphy = attributes[:giphy] || attributes['giphy'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            duration: 'duration',
            custom: 'custom',
            asset_url: 'asset_url',
            author_icon: 'author_icon',
            author_link: 'author_link',
            author_name: 'author_name',
            color: 'color',
            fallback: 'fallback',
            footer: 'footer',
            footer_icon: 'footer_icon',
            image_url: 'image_url',
            og_scrape_url: 'og_scrape_url',
            original_height: 'original_height',
            original_width: 'original_width',
            pretext: 'pretext',
            text: 'text',
            thumb_url: 'thumb_url',
            title: 'title',
            title_link: 'title_link',
            type: 'type',
            actions: 'actions',
            fields: 'fields',
            giphy: 'giphy'
          }
        end
      end
    end
  end
end
