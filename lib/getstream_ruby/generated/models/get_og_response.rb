# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

require_relative "../../base_model"

module GetStream
  module Generated
    module Models
      # 
      class GetOGResponse < GetStream::BaseModel

        # Model attributes
        attr_accessor :duration
        attr_accessor :custom
        attr_accessor :_type  # Attachment type, could be empty, image, audio or video
        attr_accessor :asset_url  # URL of detected video or audio
        attr_accessor :author_icon
        attr_accessor :author_link  # og:site
        attr_accessor :author_name  # og:site_name
        attr_accessor :color
        attr_accessor :fallback
        attr_accessor :footer
        attr_accessor :footer_icon
        attr_accessor :image_url  # URL of detected image
        attr_accessor :og_scrape_url  # extracted url from the text
        attr_accessor :original_height
        attr_accessor :original_width
        attr_accessor :pretext
        attr_accessor :text  # og:description
        attr_accessor :thumb_url  # URL of detected thumb image
        attr_accessor :title  # og:title
        attr_accessor :title_link  # og:url
        attr_accessor :actions
        attr_accessor :fields
        attr_accessor :giphy

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @duration = attributes[:duration] || attributes["duration"]
          @custom = attributes[:custom] || attributes["custom"]
          @_type = attributes[:_type] || attributes["type"] || ""
          @asset_url = attributes[:asset_url] || attributes["asset_url"] || ""
          @author_icon = attributes[:author_icon] || attributes["author_icon"] || ""
          @author_link = attributes[:author_link] || attributes["author_link"] || ""
          @author_name = attributes[:author_name] || attributes["author_name"] || ""
          @color = attributes[:color] || attributes["color"] || ""
          @fallback = attributes[:fallback] || attributes["fallback"] || ""
          @footer = attributes[:footer] || attributes["footer"] || ""
          @footer_icon = attributes[:footer_icon] || attributes["footer_icon"] || ""
          @image_url = attributes[:image_url] || attributes["image_url"] || ""
          @og_scrape_url = attributes[:og_scrape_url] || attributes["og_scrape_url"] || ""
          @original_height = attributes[:original_height] || attributes["original_height"] || 0
          @original_width = attributes[:original_width] || attributes["original_width"] || 0
          @pretext = attributes[:pretext] || attributes["pretext"] || ""
          @text = attributes[:text] || attributes["text"] || ""
          @thumb_url = attributes[:thumb_url] || attributes["thumb_url"] || ""
          @title = attributes[:title] || attributes["title"] || ""
          @title_link = attributes[:title_link] || attributes["title_link"] || ""
          @actions = attributes[:actions] || attributes["actions"] || nil
          @fields = attributes[:fields] || attributes["fields"] || nil
          @giphy = attributes[:giphy] || attributes["giphy"] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            duration: "duration",
            custom: "custom",
            _type: "type",
            asset_url: "asset_url",
            author_icon: "author_icon",
            author_link: "author_link",
            author_name: "author_name",
            color: "color",
            fallback: "fallback",
            footer: "footer",
            footer_icon: "footer_icon",
            image_url: "image_url",
            og_scrape_url: "og_scrape_url",
            original_height: "original_height",
            original_width: "original_width",
            pretext: "pretext",
            text: "text",
            thumb_url: "thumb_url",
            title: "title",
            title_link: "title_link",
            actions: "actions",
            fields: "fields",
            giphy: "giphy"
          }
        end
      end
    end
  end
end
