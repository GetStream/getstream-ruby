# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class PushPreferenceInput < GetStream::BaseModel

        # Model attributes
        # @!attribute call_level
        #   @return [String] Set the level of call push notifications for the user. One of all, none, default
        attr_accessor :call_level
        # @!attribute channel_cid
        #   @return [String] Set the push preferences for a specific channel. If empty it sets the default for the user
        attr_accessor :channel_cid
        # @!attribute chat_level
        #   @return [String] Set the level of chat push notifications for the user. One of all, mentions, none, default
        attr_accessor :chat_level
        # @!attribute disabled_until
        #   @return [DateTime] Disable push notifications till a certain time
        attr_accessor :disabled_until
        # @!attribute feeds_level
        #   @return [String] Set the level of feeds push notifications for the user. One of all, none, default
        attr_accessor :feeds_level
        # @!attribute remove_disable
        #   @return [Boolean] Remove the disabled until time. (IE stop snoozing notifications)
        attr_accessor :remove_disable
        # @!attribute user_id
        #   @return [String] The user id for which to set the push preferences. Required when using server side auths, defaults to current user with client side auth.
        attr_accessor :user_id
        # @!attribute feeds_preferences
        #   @return [FeedsPreferences]
        attr_accessor :feeds_preferences

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @call_level = attributes[:call_level] || attributes['call_level'] || ""
          @channel_cid = attributes[:channel_cid] || attributes['channel_cid'] || ""
          @chat_level = attributes[:chat_level] || attributes['chat_level'] || ""
          @disabled_until = attributes[:disabled_until] || attributes['disabled_until'] || nil
          @feeds_level = attributes[:feeds_level] || attributes['feeds_level'] || ""
          @remove_disable = attributes[:remove_disable] || attributes['remove_disable'] || false
          @user_id = attributes[:user_id] || attributes['user_id'] || ""
          @feeds_preferences = attributes[:feeds_preferences] || attributes['feeds_preferences'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            call_level: 'call_level',
            channel_cid: 'channel_cid',
            chat_level: 'chat_level',
            disabled_until: 'disabled_until',
            feeds_level: 'feeds_level',
            remove_disable: 'remove_disable',
            user_id: 'user_id',
            feeds_preferences: 'feeds_preferences'
          }
        end
      end
    end
  end
end
