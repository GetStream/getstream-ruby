# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class CheckRequest < GetStream::BaseModel

        # Model attributes
        # @!attribute entity_creator_id
        #   @return [String] ID of the user who created the entity
        attr_accessor :entity_creator_id
        # @!attribute entity_id
        #   @return [String] Unique identifier of the entity to moderate
        attr_accessor :entity_id
        # @!attribute entity_type
        #   @return [String] Type of entity to moderate
        attr_accessor :entity_type
        # @!attribute config_key
        #   @return [String] Key of the moderation configuration to use
        attr_accessor :config_key
        # @!attribute config_team
        #   @return [String] Team associated with the configuration
        attr_accessor :config_team
        # @!attribute test_mode
        #   @return [Boolean] Whether to run moderation in test mode
        attr_accessor :test_mode
        # @!attribute user_id
        #   @return [String]
        attr_accessor :user_id
        # @!attribute config
        #   @return [ModerationConfig]
        attr_accessor :config
        # @!attribute moderation_payload
        #   @return [ModerationPayload]
        attr_accessor :moderation_payload
        # @!attribute options
        #   @return [Object] Additional moderation configuration options
        attr_accessor :options
        # @!attribute user
        #   @return [UserRequest]
        attr_accessor :user

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @entity_creator_id = attributes[:entity_creator_id] || attributes['entity_creator_id']
          @entity_id = attributes[:entity_id] || attributes['entity_id']
          @entity_type = attributes[:entity_type] || attributes['entity_type']
          @config_key = attributes[:config_key] || attributes['config_key'] || ""
          @config_team = attributes[:config_team] || attributes['config_team'] || ""
          @test_mode = attributes[:test_mode] || attributes['test_mode'] || false
          @user_id = attributes[:user_id] || attributes['user_id'] || ""
          @config = attributes[:config] || attributes['config'] || nil
          @moderation_payload = attributes[:moderation_payload] || attributes['moderation_payload'] || nil
          @options = attributes[:options] || attributes['options'] || nil
          @user = attributes[:user] || attributes['user'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            entity_creator_id: 'entity_creator_id',
            entity_id: 'entity_id',
            entity_type: 'entity_type',
            config_key: 'config_key',
            config_team: 'config_team',
            test_mode: 'test_mode',
            user_id: 'user_id',
            config: 'config',
            moderation_payload: 'moderation_payload',
            options: 'options',
            user: 'user'
          }
        end
      end
    end
  end
end
