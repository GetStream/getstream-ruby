# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class SearchPayload < GetStream::BaseModel

        # Model attributes
        attr_accessor :filter_conditions  # Channel filter conditions
        attr_accessor :_next  # Pagination parameter. Cannot be used with non-zero offset.
        attr_accessor :limit  # Number of messages to return
        attr_accessor :offset  # Pagination offset. Cannot be used with sort or next.
        attr_accessor :query  # Search phrase
        attr_accessor :sort  # Sort parameters. Cannot be used with non-zero offset
        attr_accessor :message_filter_conditions  # Message filter conditions
        attr_accessor :message_options

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @filter_conditions = attributes[:filter_conditions] || attributes['filter_conditions']
          @_next = attributes[:_next] || attributes['next'] || ""
          @limit = attributes[:limit] || attributes['limit'] || 0
          @offset = attributes[:offset] || attributes['offset'] || 0
          @query = attributes[:query] || attributes['query'] || ""
          @sort = attributes[:sort] || attributes['sort'] || nil
          @message_filter_conditions = attributes[:message_filter_conditions] || attributes['message_filter_conditions'] || nil
          @message_options = attributes[:message_options] || attributes['message_options'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            filter_conditions: 'filter_conditions',
            _next: 'next',
            limit: 'limit',
            offset: 'offset',
            query: 'query',
            sort: 'sort',
            message_filter_conditions: 'message_filter_conditions',
            message_options: 'message_options'
          }
        end
      end
    end
  end
end
