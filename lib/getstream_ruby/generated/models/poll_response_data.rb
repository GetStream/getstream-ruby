# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class PollResponseData < GetStream::BaseModel

        # Model attributes
        # @!attribute _id
        #   @return [String]
        attr_accessor :_id
        # @!attribute allow_answers
        #   @return [Boolean]
        attr_accessor :allow_answers
        # @!attribute allow_user_suggested_options
        #   @return [Boolean]
        attr_accessor :allow_user_suggested_options
        # @!attribute answers_count
        #   @return [Integer]
        attr_accessor :answers_count
        # @!attribute created_at
        #   @return [DateTime]
        attr_accessor :created_at
        # @!attribute created_by_id
        #   @return [String]
        attr_accessor :created_by_id
        # @!attribute description
        #   @return [String]
        attr_accessor :description
        # @!attribute enforce_unique_vote
        #   @return [Boolean]
        attr_accessor :enforce_unique_vote
        # @!attribute name
        #   @return [String]
        attr_accessor :name
        # @!attribute updated_at
        #   @return [DateTime]
        attr_accessor :updated_at
        # @!attribute vote_count
        #   @return [Integer]
        attr_accessor :vote_count
        # @!attribute voting_visibility
        #   @return [String]
        attr_accessor :voting_visibility
        # @!attribute latest_answers
        #   @return [Array<PollVoteResponseData>]
        attr_accessor :latest_answers
        # @!attribute options
        #   @return [Array<PollOptionResponseData>]
        attr_accessor :options
        # @!attribute own_votes
        #   @return [Array<PollVoteResponseData>]
        attr_accessor :own_votes
        # @!attribute custom
        #   @return [Object]
        attr_accessor :custom
        # @!attribute latest_votes_by_option
        #   @return [Hash<String, Array<PollVoteResponseData>>]
        attr_accessor :latest_votes_by_option
        # @!attribute vote_counts_by_option
        #   @return [Hash<String, Integer>]
        attr_accessor :vote_counts_by_option
        # @!attribute is_closed
        #   @return [Boolean]
        attr_accessor :is_closed
        # @!attribute max_votes_allowed
        #   @return [Integer]
        attr_accessor :max_votes_allowed
        # @!attribute created_by
        #   @return [UserResponse]
        attr_accessor :created_by

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @_id = attributes[:_id] || attributes['id']
          @allow_answers = attributes[:allow_answers] || attributes['allow_answers']
          @allow_user_suggested_options = attributes[:allow_user_suggested_options] || attributes['allow_user_suggested_options']
          @answers_count = attributes[:answers_count] || attributes['answers_count']
          @created_at = attributes[:created_at] || attributes['created_at']
          @created_by_id = attributes[:created_by_id] || attributes['created_by_id']
          @description = attributes[:description] || attributes['description']
          @enforce_unique_vote = attributes[:enforce_unique_vote] || attributes['enforce_unique_vote']
          @name = attributes[:name] || attributes['name']
          @updated_at = attributes[:updated_at] || attributes['updated_at']
          @vote_count = attributes[:vote_count] || attributes['vote_count']
          @voting_visibility = attributes[:voting_visibility] || attributes['voting_visibility']
          @latest_answers = attributes[:latest_answers] || attributes['latest_answers']
          @options = attributes[:options] || attributes['options']
          @own_votes = attributes[:own_votes] || attributes['own_votes']
          @custom = attributes[:custom] || attributes['custom']
          @latest_votes_by_option = attributes[:latest_votes_by_option] || attributes['latest_votes_by_option']
          @vote_counts_by_option = attributes[:vote_counts_by_option] || attributes['vote_counts_by_option']
          @is_closed = attributes[:is_closed] || attributes['is_closed'] || false
          @max_votes_allowed = attributes[:max_votes_allowed] || attributes['max_votes_allowed'] || 0
          @created_by = attributes[:created_by] || attributes['created_by'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            _id: 'id',
            allow_answers: 'allow_answers',
            allow_user_suggested_options: 'allow_user_suggested_options',
            answers_count: 'answers_count',
            created_at: 'created_at',
            created_by_id: 'created_by_id',
            description: 'description',
            enforce_unique_vote: 'enforce_unique_vote',
            name: 'name',
            updated_at: 'updated_at',
            vote_count: 'vote_count',
            voting_visibility: 'voting_visibility',
            latest_answers: 'latest_answers',
            options: 'options',
            own_votes: 'own_votes',
            custom: 'custom',
            latest_votes_by_option: 'latest_votes_by_option',
            vote_counts_by_option: 'vote_counts_by_option',
            is_closed: 'is_closed',
            max_votes_allowed: 'max_votes_allowed',
            created_by: 'created_by'
          }
        end
      end
    end
  end
end
