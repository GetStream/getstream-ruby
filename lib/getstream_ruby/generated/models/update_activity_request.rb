# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class UpdateActivityRequest < GetStream::BaseModel

        # Model attributes
        # @!attribute expires_at
        #   @return [DateTime] Time when the activity will expire
        attr_accessor :expires_at
        # @!attribute poll_id
        #   @return [String] Poll ID
        attr_accessor :poll_id
        # @!attribute text
        #   @return [String] The text content of the activity
        attr_accessor :text
        # @!attribute user_id
        #   @return [String]
        attr_accessor :user_id
        # @!attribute visibility
        #   @return [String] Visibility setting for the activity
        attr_accessor :visibility
        # @!attribute attachments
        #   @return [Array<Attachment>] List of attachments for the activity
        attr_accessor :attachments
        # @!attribute feeds
        #   @return [Array<String>] List of feeds the activity is present in
        attr_accessor :feeds
        # @!attribute filter_tags
        #   @return [Array<String>] Tags used for filtering the activity
        attr_accessor :filter_tags
        # @!attribute interest_tags
        #   @return [Array<String>] Tags indicating interest categories
        attr_accessor :interest_tags
        # @!attribute custom
        #   @return [Object] Custom data for the activity
        attr_accessor :custom
        # @!attribute location
        #   @return [ActivityLocation]
        attr_accessor :location
        # @!attribute user
        #   @return [UserRequest]
        attr_accessor :user

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @expires_at = attributes[:expires_at] || attributes['expires_at'] || nil
          @poll_id = attributes[:poll_id] || attributes['poll_id'] || ""
          @text = attributes[:text] || attributes['text'] || ""
          @user_id = attributes[:user_id] || attributes['user_id'] || ""
          @visibility = attributes[:visibility] || attributes['visibility'] || ""
          @attachments = attributes[:attachments] || attributes['attachments'] || nil
          @feeds = attributes[:feeds] || attributes['feeds'] || nil
          @filter_tags = attributes[:filter_tags] || attributes['filter_tags'] || nil
          @interest_tags = attributes[:interest_tags] || attributes['interest_tags'] || nil
          @custom = attributes[:custom] || attributes['custom'] || nil
          @location = attributes[:location] || attributes['location'] || nil
          @user = attributes[:user] || attributes['user'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            expires_at: 'expires_at',
            poll_id: 'poll_id',
            text: 'text',
            user_id: 'user_id',
            visibility: 'visibility',
            attachments: 'attachments',
            feeds: 'feeds',
            filter_tags: 'filter_tags',
            interest_tags: 'interest_tags',
            custom: 'custom',
            location: 'location',
            user: 'user'
          }
        end
      end
    end
  end
end
