# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

require_relative "../../base_model"

module GetStream
  module Generated
    module Models
      # Contains all information needed to create a new poll
      class CreatePollRequest < GetStream::BaseModel

        # Model attributes
        attr_accessor :name  # The name of the poll
        attr_accessor :_id
        attr_accessor :allow_answers  # Indicates whether users can suggest user defined answers
        attr_accessor :allow_user_suggested_options
        attr_accessor :description  # A description of the poll
        attr_accessor :enforce_unique_vote  # Indicates whether users can cast multiple votes
        attr_accessor :is_closed  # Indicates whether the poll is open for voting
        attr_accessor :max_votes_allowed  # Indicates the maximum amount of votes a user can cast
        attr_accessor :user_id
        attr_accessor :voting_visibility
        attr_accessor :options
        attr_accessor :custom
        attr_accessor :user

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @name = attributes[:name] || attributes["name"]
          @_id = attributes[:_id] || attributes["id"] || ""
          @allow_answers = attributes[:allow_answers] || attributes["allow_answers"] || false
          @allow_user_suggested_options = attributes[:allow_user_suggested_options] || attributes["allow_user_suggested_options"] || false
          @description = attributes[:description] || attributes["description"] || ""
          @enforce_unique_vote = attributes[:enforce_unique_vote] || attributes["enforce_unique_vote"] || false
          @is_closed = attributes[:is_closed] || attributes["is_closed"] || false
          @max_votes_allowed = attributes[:max_votes_allowed] || attributes["max_votes_allowed"] || 0
          @user_id = attributes[:user_id] || attributes["user_id"] || ""
          @voting_visibility = attributes[:voting_visibility] || attributes["voting_visibility"] || ""
          @options = attributes[:options] || attributes["options"] || nil
          @custom = attributes[:custom] || attributes["Custom"] || nil
          @user = attributes[:user] || attributes["user"] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            name: "name",
            _id: "id",
            allow_answers: "allow_answers",
            allow_user_suggested_options: "allow_user_suggested_options",
            description: "description",
            enforce_unique_vote: "enforce_unique_vote",
            is_closed: "is_closed",
            max_votes_allowed: "max_votes_allowed",
            user_id: "user_id",
            voting_visibility: "voting_visibility",
            options: "options",
            custom: "Custom",
            user: "user"
          }
        end
      end
    end
  end
end
