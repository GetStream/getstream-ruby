# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class UpsertPushTemplateRequest < GetStream::BaseModel

        # Model attributes
        # @!attribute event_type
        #   @return [String] Event type (message.new, message.updated, reaction.new)
        attr_accessor :event_type
        # @!attribute push_provider_type
        #   @return [String] Push provider type (firebase, apn)
        attr_accessor :push_provider_type
        # @!attribute enable_push
        #   @return [Boolean] Whether to send push notification for this event
        attr_accessor :enable_push
        # @!attribute push_provider_name
        #   @return [String] Push provider name
        attr_accessor :push_provider_name
        # @!attribute template
        #   @return [String] Push template
        attr_accessor :template

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @event_type = attributes[:event_type] || attributes['event_type']
          @push_provider_type = attributes[:push_provider_type] || attributes['push_provider_type']
          @enable_push = attributes[:enable_push] || attributes['enable_push'] || false
          @push_provider_name = attributes[:push_provider_name] || attributes['push_provider_name'] || ""
          @template = attributes[:template] || attributes['template'] || ""
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            event_type: 'event_type',
            push_provider_type: 'push_provider_type',
            enable_push: 'enable_push',
            push_provider_name: 'push_provider_name',
            template: 'template'
          }
        end
      end
    end
  end
end
