# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

require_relative "../../base_model"

module GetStream
  module Generated
    module Models
      # 
      class QueryChannelsRequest < GetStream::BaseModel

        # Model attributes
        attr_accessor :limit  # Number of channels to limit
        attr_accessor :member_limit  # Number of members to limit
        attr_accessor :message_limit  # Number of messages to limit
        attr_accessor :offset  # Channel pagination offset
        attr_accessor :state  # Whether to update channel state or not
        attr_accessor :user_id
        attr_accessor :sort  # List of sort parameters
        attr_accessor :filter_conditions
        attr_accessor :user

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @limit = attributes[:limit] || attributes["limit"] || 0
          @member_limit = attributes[:member_limit] || attributes["member_limit"] || 0
          @message_limit = attributes[:message_limit] || attributes["message_limit"] || 0
          @offset = attributes[:offset] || attributes["offset"] || 0
          @state = attributes[:state] || attributes["state"] || false
          @user_id = attributes[:user_id] || attributes["user_id"] || ""
          @sort = attributes[:sort] || attributes["sort"] || nil
          @filter_conditions = attributes[:filter_conditions] || attributes["filter_conditions"] || nil
          @user = attributes[:user] || attributes["user"] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            limit: "limit",
            member_limit: "member_limit",
            message_limit: "message_limit",
            offset: "offset",
            state: "state",
            user_id: "user_id",
            sort: "sort",
            filter_conditions: "filter_conditions",
            user: "user"
          }
        end
      end
    end
  end
end
