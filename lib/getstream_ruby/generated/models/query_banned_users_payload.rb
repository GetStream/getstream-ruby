# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class QueryBannedUsersPayload < GetStream::BaseModel

        # Model attributes
        # @!attribute filter_conditions
        #   @return [Object]
        attr_accessor :filter_conditions
        # @!attribute exclude_expired_bans
        #   @return [Boolean] Whether to exclude expired bans or not
        attr_accessor :exclude_expired_bans
        # @!attribute limit
        #   @return [Integer] Number of records to return
        attr_accessor :limit
        # @!attribute offset
        #   @return [Integer] Number of records to offset
        attr_accessor :offset
        # @!attribute user_id
        #   @return [String]
        attr_accessor :user_id
        # @!attribute sort
        #   @return [Array<SortParamRequest>] Array of sort parameters
        attr_accessor :sort
        # @!attribute user
        #   @return [UserRequest]
        attr_accessor :user

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @filter_conditions = attributes[:filter_conditions] || attributes['filter_conditions']
          @exclude_expired_bans = attributes[:exclude_expired_bans] || attributes['exclude_expired_bans'] || false
          @limit = attributes[:limit] || attributes['limit'] || 0
          @offset = attributes[:offset] || attributes['offset'] || 0
          @user_id = attributes[:user_id] || attributes['user_id'] || ""
          @sort = attributes[:sort] || attributes['sort'] || nil
          @user = attributes[:user] || attributes['user'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            filter_conditions: 'filter_conditions',
            exclude_expired_bans: 'exclude_expired_bans',
            limit: 'limit',
            offset: 'offset',
            user_id: 'user_id',
            sort: 'sort',
            user: 'user'
          }
        end
      end
    end
  end
end
