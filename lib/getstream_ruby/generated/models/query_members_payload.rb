# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # Client request
      class QueryMembersPayload < GetStream::BaseModel

        # Model attributes
        # @!attribute _type
        #   @return [String]
        attr_accessor :_type
        # @!attribute filter_conditions
        #   @return [Object]
        attr_accessor :filter_conditions
        # @!attribute _id
        #   @return [String]
        attr_accessor :_id
        # @!attribute limit
        #   @return [Integer]
        attr_accessor :limit
        # @!attribute offset
        #   @return [Integer]
        attr_accessor :offset
        # @!attribute user_id
        #   @return [String]
        attr_accessor :user_id
        # @!attribute members
        #   @return [Array<ChannelMember>]
        attr_accessor :members
        # @!attribute sort
        #   @return [Array<SortParamRequest>]
        attr_accessor :sort
        # @!attribute user
        #   @return [UserRequest]
        attr_accessor :user

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @_type = attributes[:_type] || attributes['type']
          @filter_conditions = attributes[:filter_conditions] || attributes['filter_conditions']
          @_id = attributes[:_id] || attributes['id'] || ""
          @limit = attributes[:limit] || attributes['limit'] || 0
          @offset = attributes[:offset] || attributes['offset'] || 0
          @user_id = attributes[:user_id] || attributes['user_id'] || ""
          @members = attributes[:members] || attributes['members'] || nil
          @sort = attributes[:sort] || attributes['sort'] || nil
          @user = attributes[:user] || attributes['user'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            _type: 'type',
            filter_conditions: 'filter_conditions',
            _id: 'id',
            limit: 'limit',
            offset: 'offset',
            user_id: 'user_id',
            members: 'members',
            sort: 'sort',
            user: 'user'
          }
        end
      end
    end
  end
end
