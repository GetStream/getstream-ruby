# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # Represents any chat message
      class MessageWithChannelResponse < GetStream::BaseModel

        # Model attributes
        # @!attribute _id
        #   @return [String] Message ID is unique string identifier of the message
        attr_accessor :_id
        # @!attribute _type
        #   @return [String] Contains type of the message
        attr_accessor :_type
        # @!attribute cid
        #   @return [String] Channel unique identifier in <type>:<id> format
        attr_accessor :cid
        # @!attribute created_at
        #   @return [DateTime] Date/time of creation
        attr_accessor :created_at
        # @!attribute deleted_reply_count
        #   @return [Integer]
        attr_accessor :deleted_reply_count
        # @!attribute html
        #   @return [String] Contains HTML markup of the message. Can only be set when using server-side API
        attr_accessor :html
        # @!attribute pinned
        #   @return [Boolean] Whether message is pinned or not
        attr_accessor :pinned
        # @!attribute reply_count
        #   @return [Integer] Number of replies to this message
        attr_accessor :reply_count
        # @!attribute shadowed
        #   @return [Boolean] Whether the message was shadowed or not
        attr_accessor :shadowed
        # @!attribute silent
        #   @return [Boolean] Whether message is silent or not
        attr_accessor :silent
        # @!attribute text
        #   @return [String] Text of the message. Should be empty if `mml` is provided
        attr_accessor :text
        # @!attribute updated_at
        #   @return [DateTime] Date/time of the last update
        attr_accessor :updated_at
        # @!attribute attachments
        #   @return [Array<Attachment>] Array of message attachments
        attr_accessor :attachments
        # @!attribute latest_reactions
        #   @return [Array<ReactionResponse>] List of 10 latest reactions to this message
        attr_accessor :latest_reactions
        # @!attribute mentioned_users
        #   @return [Array<UserResponse>] List of mentioned users
        attr_accessor :mentioned_users
        # @!attribute own_reactions
        #   @return [Array<ReactionResponse>] List of 10 latest reactions of authenticated user to this message
        attr_accessor :own_reactions
        # @!attribute restricted_visibility
        #   @return [Array<String>] A list of user ids that have restricted visibility to the message, if the list is not empty, the message is only visible to the users in the list
        attr_accessor :restricted_visibility
        # @!attribute channel
        #   @return [ChannelResponse]
        attr_accessor :channel
        # @!attribute custom
        #   @return [Object]
        attr_accessor :custom
        # @!attribute reaction_counts
        #   @return [Hash<String, Integer>] An object containing number of reactions of each type. Key: reaction type (string), value: number of reactions (int)
        attr_accessor :reaction_counts
        # @!attribute reaction_scores
        #   @return [Hash<String, Integer>] An object containing scores of reactions of each type. Key: reaction type (string), value: total score of reactions (int)
        attr_accessor :reaction_scores
        # @!attribute user
        #   @return [UserResponse]
        attr_accessor :user
        # @!attribute command
        #   @return [String] Contains provided slash command
        attr_accessor :command
        # @!attribute deleted_at
        #   @return [DateTime] Date/time of deletion
        attr_accessor :deleted_at
        # @!attribute deleted_for_me
        #   @return [Boolean]
        attr_accessor :deleted_for_me
        # @!attribute message_text_updated_at
        #   @return [DateTime]
        attr_accessor :message_text_updated_at
        # @!attribute mml
        #   @return [String] Should be empty if `text` is provided. Can only be set when using server-side API
        attr_accessor :mml
        # @!attribute parent_id
        #   @return [String] ID of parent message (thread)
        attr_accessor :parent_id
        # @!attribute pin_expires
        #   @return [DateTime] Date when pinned message expires
        attr_accessor :pin_expires
        # @!attribute pinned_at
        #   @return [DateTime] Date when message got pinned
        attr_accessor :pinned_at
        # @!attribute poll_id
        #   @return [String] Identifier of the poll to include in the message
        attr_accessor :poll_id
        # @!attribute quoted_message_id
        #   @return [String]
        attr_accessor :quoted_message_id
        # @!attribute show_in_channel
        #   @return [Boolean] Whether thread reply should be shown in the channel as well
        attr_accessor :show_in_channel
        # @!attribute thread_participants
        #   @return [Array<UserResponse>] List of users who participate in thread
        attr_accessor :thread_participants
        # @!attribute draft
        #   @return [DraftResponse]
        attr_accessor :draft
        # @!attribute i18n
        #   @return [Hash<String, String>] Object with translations. Key `language` contains the original language key. Other keys contain translations
        attr_accessor :i18n
        # @!attribute image_labels
        #   @return [Hash<String, Array<String>>] Contains image moderation information
        attr_accessor :image_labels
        # @!attribute member
        #   @return [ChannelMemberResponse]
        attr_accessor :member
        # @!attribute moderation
        #   @return [ModerationV2Response]
        attr_accessor :moderation
        # @!attribute pinned_by
        #   @return [UserResponse]
        attr_accessor :pinned_by
        # @!attribute poll
        #   @return [PollResponseData]
        attr_accessor :poll
        # @!attribute quoted_message
        #   @return [MessageResponse]
        attr_accessor :quoted_message
        # @!attribute reaction_groups
        #   @return [Hash<String, ReactionGroupResponse>]
        attr_accessor :reaction_groups
        # @!attribute reminder
        #   @return [ReminderResponseData]
        attr_accessor :reminder
        # @!attribute shared_location
        #   @return [SharedLocationResponseData]
        attr_accessor :shared_location

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @_id = attributes[:_id] || attributes['id']
          @_type = attributes[:_type] || attributes['type']
          @cid = attributes[:cid] || attributes['cid']
          @created_at = attributes[:created_at] || attributes['created_at']
          @deleted_reply_count = attributes[:deleted_reply_count] || attributes['deleted_reply_count']
          @html = attributes[:html] || attributes['html']
          @pinned = attributes[:pinned] || attributes['pinned']
          @reply_count = attributes[:reply_count] || attributes['reply_count']
          @shadowed = attributes[:shadowed] || attributes['shadowed']
          @silent = attributes[:silent] || attributes['silent']
          @text = attributes[:text] || attributes['text']
          @updated_at = attributes[:updated_at] || attributes['updated_at']
          @attachments = attributes[:attachments] || attributes['attachments']
          @latest_reactions = attributes[:latest_reactions] || attributes['latest_reactions']
          @mentioned_users = attributes[:mentioned_users] || attributes['mentioned_users']
          @own_reactions = attributes[:own_reactions] || attributes['own_reactions']
          @restricted_visibility = attributes[:restricted_visibility] || attributes['restricted_visibility']
          @channel = attributes[:channel] || attributes['channel']
          @custom = attributes[:custom] || attributes['custom']
          @reaction_counts = attributes[:reaction_counts] || attributes['reaction_counts']
          @reaction_scores = attributes[:reaction_scores] || attributes['reaction_scores']
          @user = attributes[:user] || attributes['user']
          @command = attributes[:command] || attributes['command'] || ""
          @deleted_at = attributes[:deleted_at] || attributes['deleted_at'] || nil
          @deleted_for_me = attributes[:deleted_for_me] || attributes['deleted_for_me'] || false
          @message_text_updated_at = attributes[:message_text_updated_at] || attributes['message_text_updated_at'] || nil
          @mml = attributes[:mml] || attributes['mml'] || ""
          @parent_id = attributes[:parent_id] || attributes['parent_id'] || ""
          @pin_expires = attributes[:pin_expires] || attributes['pin_expires'] || nil
          @pinned_at = attributes[:pinned_at] || attributes['pinned_at'] || nil
          @poll_id = attributes[:poll_id] || attributes['poll_id'] || ""
          @quoted_message_id = attributes[:quoted_message_id] || attributes['quoted_message_id'] || ""
          @show_in_channel = attributes[:show_in_channel] || attributes['show_in_channel'] || false
          @thread_participants = attributes[:thread_participants] || attributes['thread_participants'] || nil
          @draft = attributes[:draft] || attributes['draft'] || nil
          @i18n = attributes[:i18n] || attributes['i18n'] || nil
          @image_labels = attributes[:image_labels] || attributes['image_labels'] || nil
          @member = attributes[:member] || attributes['member'] || nil
          @moderation = attributes[:moderation] || attributes['moderation'] || nil
          @pinned_by = attributes[:pinned_by] || attributes['pinned_by'] || nil
          @poll = attributes[:poll] || attributes['poll'] || nil
          @quoted_message = attributes[:quoted_message] || attributes['quoted_message'] || nil
          @reaction_groups = attributes[:reaction_groups] || attributes['reaction_groups'] || nil
          @reminder = attributes[:reminder] || attributes['reminder'] || nil
          @shared_location = attributes[:shared_location] || attributes['shared_location'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            _id: 'id',
            _type: 'type',
            cid: 'cid',
            created_at: 'created_at',
            deleted_reply_count: 'deleted_reply_count',
            html: 'html',
            pinned: 'pinned',
            reply_count: 'reply_count',
            shadowed: 'shadowed',
            silent: 'silent',
            text: 'text',
            updated_at: 'updated_at',
            attachments: 'attachments',
            latest_reactions: 'latest_reactions',
            mentioned_users: 'mentioned_users',
            own_reactions: 'own_reactions',
            restricted_visibility: 'restricted_visibility',
            channel: 'channel',
            custom: 'custom',
            reaction_counts: 'reaction_counts',
            reaction_scores: 'reaction_scores',
            user: 'user',
            command: 'command',
            deleted_at: 'deleted_at',
            deleted_for_me: 'deleted_for_me',
            message_text_updated_at: 'message_text_updated_at',
            mml: 'mml',
            parent_id: 'parent_id',
            pin_expires: 'pin_expires',
            pinned_at: 'pinned_at',
            poll_id: 'poll_id',
            quoted_message_id: 'quoted_message_id',
            show_in_channel: 'show_in_channel',
            thread_participants: 'thread_participants',
            draft: 'draft',
            i18n: 'i18n',
            image_labels: 'image_labels',
            member: 'member',
            moderation: 'moderation',
            pinned_by: 'pinned_by',
            poll: 'poll',
            quoted_message: 'quoted_message',
            reaction_groups: 'reaction_groups',
            reminder: 'reminder',
            shared_location: 'shared_location'
          }
        end
      end
    end
  end
end
