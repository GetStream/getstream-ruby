# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class QueryReviewQueueRequest < GetStream::BaseModel

        # Model attributes
        # @!attribute limit
        #   @return [Integer]
        attr_accessor :limit
        # @!attribute lock_count
        #   @return [Integer] Number of items to lock (1-25)
        attr_accessor :lock_count
        # @!attribute lock_duration
        #   @return [Integer] Duration for which items should be locked
        attr_accessor :lock_duration
        # @!attribute lock_items
        #   @return [Boolean] Whether to lock items for review (true), unlock items (false), or just fetch (nil)
        attr_accessor :lock_items
        # @!attribute next
        #   @return [String]
        attr_accessor :next
        # @!attribute prev
        #   @return [String]
        attr_accessor :prev
        # @!attribute stats_only
        #   @return [Boolean] Whether to return only statistics
        attr_accessor :stats_only
        # @!attribute user_id
        #   @return [String]
        attr_accessor :user_id
        # @!attribute sort
        #   @return [Array<SortParamRequest>] Sorting parameters for the results
        attr_accessor :sort
        # @!attribute filter
        #   @return [Object] Filter conditions for review queue items
        attr_accessor :filter
        # @!attribute user
        #   @return [UserRequest]
        attr_accessor :user

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @limit = attributes[:limit] || attributes['limit'] || 0
          @lock_count = attributes[:lock_count] || attributes['lock_count'] || 0
          @lock_duration = attributes[:lock_duration] || attributes['lock_duration'] || 0
          @lock_items = attributes[:lock_items] || attributes['lock_items'] || false
          @next = attributes[:next] || attributes['next'] || ""
          @prev = attributes[:prev] || attributes['prev'] || ""
          @stats_only = attributes[:stats_only] || attributes['stats_only'] || false
          @user_id = attributes[:user_id] || attributes['user_id'] || ""
          @sort = attributes[:sort] || attributes['sort'] || nil
          @filter = attributes[:filter] || attributes['filter'] || nil
          @user = attributes[:user] || attributes['user'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            limit: 'limit',
            lock_count: 'lock_count',
            lock_duration: 'lock_duration',
            lock_items: 'lock_items',
            next: 'next',
            prev: 'prev',
            stats_only: 'stats_only',
            user_id: 'user_id',
            sort: 'sort',
            filter: 'filter',
            user: 'user'
          }
        end
      end
    end
  end
end
