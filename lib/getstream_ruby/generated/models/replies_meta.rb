# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # Cursor & depth information for a comment's direct replies. Mirrors Reddit's 'load more replies' semantics.
      class RepliesMeta < GetStream::BaseModel

        # Model attributes
        # @!attribute depth_truncated
        #   @return [Boolean] True if the subtree was cut because the requested depth was reached.
        attr_accessor :depth_truncated
        # @!attribute has_more
        #   @return [Boolean] True if more siblings exist in the database.
        attr_accessor :has_more
        # @!attribute remaining
        #   @return [Integer] Number of unread siblings that match current filters.
        attr_accessor :remaining
        # @!attribute next_cursor
        #   @return [String] Opaque cursor to request the next page of siblings.
        attr_accessor :next_cursor

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @depth_truncated = attributes[:depth_truncated] || attributes['depth_truncated']
          @has_more = attributes[:has_more] || attributes['has_more']
          @remaining = attributes[:remaining] || attributes['remaining']
          @next_cursor = attributes[:next_cursor] || attributes['next_cursor'] || ""
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            depth_truncated: 'depth_truncated',
            has_more: 'has_more',
            remaining: 'remaining',
            next_cursor: 'next_cursor'
          }
        end
      end
    end
  end
end
