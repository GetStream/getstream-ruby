# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

require_relative "../../base_model"

module GetStream
  module Generated
    module Models
      # This event is sent when a moderation check is completed
      class ModerationCheckCompletedEvent < GetStream::BaseModel

        # Model attributes
        attr_accessor :created_at
        attr_accessor :entity_id  # The ID of entity which was moderated
        attr_accessor :entity_type  # The type of the entity which was moderated
        attr_accessor :recommended_action  # The recommended action
        attr_accessor :review_queue_item_id  # The review queue item ID
        attr_accessor :custom
        attr_accessor :_type
        attr_accessor :received_at

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @created_at = attributes[:created_at] || attributes["created_at"]
          @entity_id = attributes[:entity_id] || attributes["entity_id"]
          @entity_type = attributes[:entity_type] || attributes["entity_type"]
          @recommended_action = attributes[:recommended_action] || attributes["recommended_action"]
          @review_queue_item_id = attributes[:review_queue_item_id] || attributes["review_queue_item_id"]
          @custom = attributes[:custom] || attributes["custom"]
          @_type = attributes[:_type] || attributes["type"] || "moderation_check.completed"
          @received_at = attributes[:received_at] || attributes["received_at"] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            created_at: "created_at",
            entity_id: "entity_id",
            entity_type: "entity_type",
            recommended_action: "recommended_action",
            review_queue_item_id: "review_queue_item_id",
            custom: "custom",
            _type: "type",
            received_at: "received_at"
          }
        end
      end
    end
  end
end
