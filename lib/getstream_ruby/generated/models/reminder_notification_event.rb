# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # Emitted when a reminder becomes due, triggering a notification for the user.
      class ReminderNotificationEvent < GetStream::BaseModel

        # Model attributes
        # @!attribute cid
        #   @return [String] The CID of the Channel for which the reminder was created
        attr_accessor :cid
        # @!attribute created_at
        #   @return [DateTime] Date/time of creation
        attr_accessor :created_at
        # @!attribute message_id
        #   @return [String] The ID of the message for which the reminder was created
        attr_accessor :message_id
        # @!attribute user_id
        #   @return [String] The ID of the user for whom the reminder was created
        attr_accessor :user_id
        # @!attribute custom
        #   @return [Object]
        attr_accessor :custom
        # @!attribute type
        #   @return [String] The type of event: "notification.reminder_due" in this case
        attr_accessor :type
        # @!attribute parent_id
        #   @return [String]
        attr_accessor :parent_id
        # @!attribute received_at
        #   @return [DateTime]
        attr_accessor :received_at
        # @!attribute reminder
        #   @return [ReminderResponseData]
        attr_accessor :reminder

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @cid = attributes[:cid] || attributes['cid']
          @created_at = attributes[:created_at] || attributes['created_at']
          @message_id = attributes[:message_id] || attributes['message_id']
          @user_id = attributes[:user_id] || attributes['user_id']
          @custom = attributes[:custom] || attributes['custom']
          @type = attributes[:type] || attributes['type'] || "notification.reminder_due"
          @parent_id = attributes[:parent_id] || attributes['parent_id'] || ""
          @received_at = attributes[:received_at] || attributes['received_at'] || nil
          @reminder = attributes[:reminder] || attributes['reminder'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            cid: 'cid',
            created_at: 'created_at',
            message_id: 'message_id',
            user_id: 'user_id',
            custom: 'custom',
            type: 'type',
            parent_id: 'parent_id',
            received_at: 'received_at',
            reminder: 'reminder'
          }
        end
      end
    end
  end
end
