# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # This event is sent when content is flagged for moderation
      class ModerationFlaggedEvent < GetStream::BaseModel

        # Model attributes
        # @!attribute content_type
        #   @return [String] The type of content that was flagged
        attr_accessor :content_type
        # @!attribute created_at
        #   @return [DateTime]
        attr_accessor :created_at
        # @!attribute object_id
        #   @return [String] The ID of the flagged content
        attr_accessor :object_id
        # @!attribute custom
        #   @return [Object]
        attr_accessor :custom
        # @!attribute _type
        #   @return [String]
        attr_accessor :_type
        # @!attribute received_at
        #   @return [DateTime]
        attr_accessor :received_at

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @content_type = attributes[:content_type] || attributes['content_type']
          @created_at = attributes[:created_at] || attributes['created_at']
          @object_id = attributes[:object_id] || attributes['object_id']
          @custom = attributes[:custom] || attributes['custom']
          @_type = attributes[:_type] || attributes['type'] || "moderation.flagged"
          @received_at = attributes[:received_at] || attributes['received_at'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            content_type: 'content_type',
            created_at: 'created_at',
            object_id: 'object_id',
            custom: 'custom',
            _type: 'type',
            received_at: 'received_at'
          }
        end
      end
    end
  end
end
