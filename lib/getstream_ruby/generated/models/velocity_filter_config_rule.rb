# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class VelocityFilterConfigRule < GetStream::BaseModel

        # Model attributes
        # @!attribute action
        #   @return [String]
        attr_accessor :action
        # @!attribute ban_duration
        #   @return [Integer]
        attr_accessor :ban_duration
        # @!attribute cascading_action
        #   @return [String]
        attr_accessor :cascading_action
        # @!attribute cascading_threshold
        #   @return [Integer]
        attr_accessor :cascading_threshold
        # @!attribute check_message_context
        #   @return [Boolean]
        attr_accessor :check_message_context
        # @!attribute fast_spam_threshold
        #   @return [Integer]
        attr_accessor :fast_spam_threshold
        # @!attribute fast_spam_ttl
        #   @return [Integer]
        attr_accessor :fast_spam_ttl
        # @!attribute ip_ban
        #   @return [Boolean]
        attr_accessor :ip_ban
        # @!attribute probation_period
        #   @return [Integer]
        attr_accessor :probation_period
        # @!attribute shadow_ban
        #   @return [Boolean]
        attr_accessor :shadow_ban
        # @!attribute slow_spam_ban_duration
        #   @return [Integer]
        attr_accessor :slow_spam_ban_duration
        # @!attribute slow_spam_threshold
        #   @return [Integer]
        attr_accessor :slow_spam_threshold
        # @!attribute slow_spam_ttl
        #   @return [Integer]
        attr_accessor :slow_spam_ttl
        # @!attribute url_only
        #   @return [Boolean]
        attr_accessor :url_only

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @action = attributes[:action] || attributes['action']
          @ban_duration = attributes[:ban_duration] || attributes['ban_duration'] || 0
          @cascading_action = attributes[:cascading_action] || attributes['cascading_action'] || ""
          @cascading_threshold = attributes[:cascading_threshold] || attributes['cascading_threshold'] || 0
          @check_message_context = attributes[:check_message_context] || attributes['check_message_context'] || false
          @fast_spam_threshold = attributes[:fast_spam_threshold] || attributes['fast_spam_threshold'] || 0
          @fast_spam_ttl = attributes[:fast_spam_ttl] || attributes['fast_spam_ttl'] || 0
          @ip_ban = attributes[:ip_ban] || attributes['ip_ban'] || false
          @probation_period = attributes[:probation_period] || attributes['probation_period'] || 0
          @shadow_ban = attributes[:shadow_ban] || attributes['shadow_ban'] || false
          @slow_spam_ban_duration = attributes[:slow_spam_ban_duration] || attributes['slow_spam_ban_duration'] || 0
          @slow_spam_threshold = attributes[:slow_spam_threshold] || attributes['slow_spam_threshold'] || 0
          @slow_spam_ttl = attributes[:slow_spam_ttl] || attributes['slow_spam_ttl'] || 0
          @url_only = attributes[:url_only] || attributes['url_only'] || false
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            action: 'action',
            ban_duration: 'ban_duration',
            cascading_action: 'cascading_action',
            cascading_threshold: 'cascading_threshold',
            check_message_context: 'check_message_context',
            fast_spam_threshold: 'fast_spam_threshold',
            fast_spam_ttl: 'fast_spam_ttl',
            ip_ban: 'ip_ban',
            probation_period: 'probation_period',
            shadow_ban: 'shadow_ban',
            slow_spam_ban_duration: 'slow_spam_ban_duration',
            slow_spam_threshold: 'slow_spam_threshold',
            slow_spam_ttl: 'slow_spam_ttl',
            url_only: 'url_only'
          }
        end
      end
    end
  end
end
