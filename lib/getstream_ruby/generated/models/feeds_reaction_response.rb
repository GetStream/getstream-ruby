# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class FeedsReactionResponse < GetStream::BaseModel

        # Model attributes
        # @!attribute activity_id
        #   @return [String] ID of the activity that was reacted to
        attr_accessor :activity_id
        # @!attribute created_at
        #   @return [DateTime] When the reaction was created
        attr_accessor :created_at
        # @!attribute type
        #   @return [String] Type of reaction
        attr_accessor :type
        # @!attribute updated_at
        #   @return [DateTime] When the reaction was last updated
        attr_accessor :updated_at
        # @!attribute user
        #   @return [UserResponse]
        attr_accessor :user
        # @!attribute comment_id
        #   @return [String] ID of the comment that was reacted to
        attr_accessor :comment_id
        # @!attribute custom
        #   @return [Object] Custom data for the reaction
        attr_accessor :custom

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @activity_id = attributes[:activity_id] || attributes['activity_id']
          @created_at = attributes[:created_at] || attributes['created_at']
          @type = attributes[:type] || attributes['type']
          @updated_at = attributes[:updated_at] || attributes['updated_at']
          @user = attributes[:user] || attributes['user']
          @comment_id = attributes[:comment_id] || attributes['comment_id'] || ""
          @custom = attributes[:custom] || attributes['custom'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            activity_id: 'activity_id',
            created_at: 'created_at',
            type: 'type',
            updated_at: 'updated_at',
            user: 'user',
            comment_id: 'comment_id',
            custom: 'custom'
          }
        end
      end
    end
  end
end
