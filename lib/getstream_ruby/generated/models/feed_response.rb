# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class FeedResponse < GetStream::BaseModel

        # Model attributes
        attr_accessor :_id  # Unique identifier for the feed
        attr_accessor :created_at  # When the feed was created
        attr_accessor :description  # Description of the feed
        attr_accessor :feed  # Fully qualified feed ID (group_id:id)
        attr_accessor :follower_count  # Number of followers of this feed
        attr_accessor :following_count  # Number of feeds this feed follows
        attr_accessor :group_id  # Group this feed belongs to
        attr_accessor :member_count  # Number of members in this feed
        attr_accessor :name  # Name of the feed
        attr_accessor :pin_count  # Number of pinned activities in this feed
        attr_accessor :updated_at  # When the feed was last updated
        attr_accessor :created_by
        attr_accessor :deleted_at  # When the feed was deleted
        attr_accessor :visibility  # Visibility setting for the feed
        attr_accessor :filter_tags  # Tags used for filtering feeds
        attr_accessor :own_follows  # Follow relationships where the current user's feeds are following this feed
        attr_accessor :custom  # Custom data for the feed

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @_id = attributes[:_id] || attributes['id']
          @created_at = attributes[:created_at] || attributes['created_at']
          @description = attributes[:description] || attributes['description']
          @feed = attributes[:feed] || attributes['feed']
          @follower_count = attributes[:follower_count] || attributes['follower_count']
          @following_count = attributes[:following_count] || attributes['following_count']
          @group_id = attributes[:group_id] || attributes['group_id']
          @member_count = attributes[:member_count] || attributes['member_count']
          @name = attributes[:name] || attributes['name']
          @pin_count = attributes[:pin_count] || attributes['pin_count']
          @updated_at = attributes[:updated_at] || attributes['updated_at']
          @created_by = attributes[:created_by] || attributes['created_by']
          @deleted_at = attributes[:deleted_at] || attributes['deleted_at'] || nil
          @visibility = attributes[:visibility] || attributes['visibility'] || ""
          @filter_tags = attributes[:filter_tags] || attributes['filter_tags'] || nil
          @own_follows = attributes[:own_follows] || attributes['own_follows'] || nil
          @custom = attributes[:custom] || attributes['custom'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            _id: 'id',
            created_at: 'created_at',
            description: 'description',
            feed: 'feed',
            follower_count: 'follower_count',
            following_count: 'following_count',
            group_id: 'group_id',
            member_count: 'member_count',
            name: 'name',
            pin_count: 'pin_count',
            updated_at: 'updated_at',
            created_by: 'created_by',
            deleted_at: 'deleted_at',
            visibility: 'visibility',
            filter_tags: 'filter_tags',
            own_follows: 'own_follows',
            custom: 'custom'
          }
        end
      end
    end
  end
end
