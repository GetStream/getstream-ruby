# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class ConfigResponse < GetStream::BaseModel

        # Model attributes
        attr_accessor :async  # Whether moderation should be performed asynchronously
        attr_accessor :created_at  # When the configuration was created
        attr_accessor :key  # Unique identifier for the moderation configuration
        attr_accessor :team  # Team associated with the configuration
        attr_accessor :updated_at  # When the configuration was last updated
        attr_accessor :supported_video_call_harm_types
        attr_accessor :ai_image_config
        attr_accessor :ai_text_config
        attr_accessor :ai_video_config
        attr_accessor :automod_platform_circumvention_config
        attr_accessor :automod_semantic_filters_config
        attr_accessor :automod_toxicity_config
        attr_accessor :block_list_config
        attr_accessor :llm_config
        attr_accessor :velocity_filter_config
        attr_accessor :video_call_rule_config

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @async = attributes[:async] || attributes['async']
          @created_at = attributes[:created_at] || attributes['created_at']
          @key = attributes[:key] || attributes['key']
          @team = attributes[:team] || attributes['team']
          @updated_at = attributes[:updated_at] || attributes['updated_at']
          @supported_video_call_harm_types = attributes[:supported_video_call_harm_types] || attributes['supported_video_call_harm_types']
          @ai_image_config = attributes[:ai_image_config] || attributes['ai_image_config'] || nil
          @ai_text_config = attributes[:ai_text_config] || attributes['ai_text_config'] || nil
          @ai_video_config = attributes[:ai_video_config] || attributes['ai_video_config'] || nil
          @automod_platform_circumvention_config = attributes[:automod_platform_circumvention_config] || attributes['automod_platform_circumvention_config'] || nil
          @automod_semantic_filters_config = attributes[:automod_semantic_filters_config] || attributes['automod_semantic_filters_config'] || nil
          @automod_toxicity_config = attributes[:automod_toxicity_config] || attributes['automod_toxicity_config'] || nil
          @block_list_config = attributes[:block_list_config] || attributes['block_list_config'] || nil
          @llm_config = attributes[:llm_config] || attributes['llm_config'] || nil
          @velocity_filter_config = attributes[:velocity_filter_config] || attributes['velocity_filter_config'] || nil
          @video_call_rule_config = attributes[:video_call_rule_config] || attributes['video_call_rule_config'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            async: 'async',
            created_at: 'created_at',
            key: 'key',
            team: 'team',
            updated_at: 'updated_at',
            supported_video_call_harm_types: 'supported_video_call_harm_types',
            ai_image_config: 'ai_image_config',
            ai_text_config: 'ai_text_config',
            ai_video_config: 'ai_video_config',
            automod_platform_circumvention_config: 'automod_platform_circumvention_config',
            automod_semantic_filters_config: 'automod_semantic_filters_config',
            automod_toxicity_config: 'automod_toxicity_config',
            block_list_config: 'block_list_config',
            llm_config: 'llm_config',
            velocity_filter_config: 'velocity_filter_config',
            video_call_rule_config: 'video_call_rule_config'
          }
        end
      end
    end
  end
end
