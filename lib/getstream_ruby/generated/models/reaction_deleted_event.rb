# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class ReactionDeletedEvent < GetStream::BaseModel

        # Model attributes
        attr_accessor :channel_id
        attr_accessor :channel_type
        attr_accessor :cid
        attr_accessor :created_at
        attr_accessor :_type
        attr_accessor :team
        attr_accessor :thread_participants
        attr_accessor :message
        attr_accessor :reaction
        attr_accessor :user

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @channel_id = attributes[:channel_id] || attributes['channel_id']
          @channel_type = attributes[:channel_type] || attributes['channel_type']
          @cid = attributes[:cid] || attributes['cid']
          @created_at = attributes[:created_at] || attributes['created_at']
          @_type = attributes[:_type] || attributes['type'] || "reaction.deleted"
          @team = attributes[:team] || attributes['team'] || ""
          @thread_participants = attributes[:thread_participants] || attributes['thread_participants'] || nil
          @message = attributes[:message] || attributes['message'] || nil
          @reaction = attributes[:reaction] || attributes['reaction'] || nil
          @user = attributes[:user] || attributes['user'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            channel_id: 'channel_id',
            channel_type: 'channel_type',
            cid: 'cid',
            created_at: 'created_at',
            _type: 'type',
            team: 'team',
            thread_participants: 'thread_participants',
            message: 'message',
            reaction: 'reaction',
            user: 'user'
          }
        end
      end
    end
  end
end
