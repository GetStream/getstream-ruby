# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class Permission < GetStream::BaseModel

        # Model attributes
        # @!attribute _id
        #   @return [String] Unique permission ID
        attr_accessor :_id
        # @!attribute action
        #   @return [String] Action name this permission is for (e.g. SendMessage)
        attr_accessor :action
        # @!attribute custom
        #   @return [Boolean] Whether this is a custom permission or built-in
        attr_accessor :custom
        # @!attribute description
        #   @return [String] Description of the permission
        attr_accessor :description
        # @!attribute level
        #   @return [String] Level at which permission could be applied (app or channel)
        attr_accessor :level
        # @!attribute name
        #   @return [String] Name of the permission
        attr_accessor :name
        # @!attribute owner
        #   @return [Boolean] Whether this permission applies to resource owner or not
        attr_accessor :owner
        # @!attribute same_team
        #   @return [Boolean] Whether this permission applies to teammates (multi-tenancy mode only)
        attr_accessor :same_team
        # @!attribute tags
        #   @return [Array<String>] List of tags of the permission
        attr_accessor :tags
        # @!attribute condition
        #   @return [Object] MongoDB style condition which decides whether or not the permission is granted
        attr_accessor :condition

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @_id = attributes[:_id] || attributes['id']
          @action = attributes[:action] || attributes['action']
          @custom = attributes[:custom] || attributes['custom']
          @description = attributes[:description] || attributes['description']
          @level = attributes[:level] || attributes['level']
          @name = attributes[:name] || attributes['name']
          @owner = attributes[:owner] || attributes['owner']
          @same_team = attributes[:same_team] || attributes['same_team']
          @tags = attributes[:tags] || attributes['tags']
          @condition = attributes[:condition] || attributes['condition'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            _id: 'id',
            action: 'action',
            custom: 'custom',
            description: 'description',
            level: 'level',
            name: 'name',
            owner: 'owner',
            same_team: 'same_team',
            tags: 'tags',
            condition: 'condition'
          }
        end
      end
    end
  end
end
