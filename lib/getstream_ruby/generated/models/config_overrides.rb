# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class ConfigOverrides < GetStream::BaseModel

        # Model attributes
        # @!attribute commands
        #   @return [Array<String>]
        attr_accessor :commands
        # @!attribute grants
        #   @return [Hash<String, Array<String>>]
        attr_accessor :grants
        # @!attribute blocklist
        #   @return [String]
        attr_accessor :blocklist
        # @!attribute blocklist_behavior
        #   @return [String]
        attr_accessor :blocklist_behavior
        # @!attribute count_messages
        #   @return [Boolean]
        attr_accessor :count_messages
        # @!attribute max_message_length
        #   @return [Integer]
        attr_accessor :max_message_length
        # @!attribute quotes
        #   @return [Boolean]
        attr_accessor :quotes
        # @!attribute reactions
        #   @return [Boolean]
        attr_accessor :reactions
        # @!attribute replies
        #   @return [Boolean]
        attr_accessor :replies
        # @!attribute shared_locations
        #   @return [Boolean]
        attr_accessor :shared_locations
        # @!attribute typing_events
        #   @return [Boolean]
        attr_accessor :typing_events
        # @!attribute uploads
        #   @return [Boolean]
        attr_accessor :uploads
        # @!attribute url_enrichment
        #   @return [Boolean]
        attr_accessor :url_enrichment
        # @!attribute user_message_reminders
        #   @return [Boolean]
        attr_accessor :user_message_reminders

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @commands = attributes[:commands] || attributes['commands']
          @grants = attributes[:grants] || attributes['grants']
          @blocklist = attributes[:blocklist] || attributes['blocklist'] || ""
          @blocklist_behavior = attributes[:blocklist_behavior] || attributes['blocklist_behavior'] || ""
          @count_messages = attributes[:count_messages] || attributes['count_messages'] || false
          @max_message_length = attributes[:max_message_length] || attributes['max_message_length'] || 0
          @quotes = attributes[:quotes] || attributes['quotes'] || false
          @reactions = attributes[:reactions] || attributes['reactions'] || false
          @replies = attributes[:replies] || attributes['replies'] || false
          @shared_locations = attributes[:shared_locations] || attributes['shared_locations'] || false
          @typing_events = attributes[:typing_events] || attributes['typing_events'] || false
          @uploads = attributes[:uploads] || attributes['uploads'] || false
          @url_enrichment = attributes[:url_enrichment] || attributes['url_enrichment'] || false
          @user_message_reminders = attributes[:user_message_reminders] || attributes['user_message_reminders'] || false
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            commands: 'commands',
            grants: 'grants',
            blocklist: 'blocklist',
            blocklist_behavior: 'blocklist_behavior',
            count_messages: 'count_messages',
            max_message_length: 'max_message_length',
            quotes: 'quotes',
            reactions: 'reactions',
            replies: 'replies',
            shared_locations: 'shared_locations',
            typing_events: 'typing_events',
            uploads: 'uploads',
            url_enrichment: 'url_enrichment',
            user_message_reminders: 'user_message_reminders'
          }
        end
      end
    end
  end
end
