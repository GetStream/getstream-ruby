# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

require_relative "../../base_model"

module GetStream
  module Generated
    module Models
      # 
      class FlagRequest < GetStream::BaseModel

        # Model attributes
        attr_accessor :entity_id  # Unique identifier of the entity being flagged
        attr_accessor :entity_type  # Type of entity being flagged (e.g., message, user)
        attr_accessor :entity_creator_id  # ID of the user who created the flagged entity
        attr_accessor :reason  # Optional explanation for why the content is being flagged
        attr_accessor :user_id
        attr_accessor :custom  # Additional metadata about the flag
        attr_accessor :moderation_payload
        attr_accessor :user

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @entity_id = attributes[:entity_id] || attributes["entity_id"]
          @entity_type = attributes[:entity_type] || attributes["entity_type"]
          @entity_creator_id = attributes[:entity_creator_id] || attributes["entity_creator_id"] || ""
          @reason = attributes[:reason] || attributes["reason"] || ""
          @user_id = attributes[:user_id] || attributes["user_id"] || ""
          @custom = attributes[:custom] || attributes["custom"] || nil
          @moderation_payload = attributes[:moderation_payload] || attributes["moderation_payload"] || nil
          @user = attributes[:user] || attributes["user"] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            entity_id: "entity_id",
            entity_type: "entity_type",
            entity_creator_id: "entity_creator_id",
            reason: "reason",
            user_id: "user_id",
            custom: "custom",
            moderation_payload: "moderation_payload",
            user: "user"
          }
        end
      end
    end
  end
end
