# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

require_relative "../../base_model"

module GetStream
  module Generated
    module Models
      # 
      class NotificationMarkUnreadEvent < GetStream::BaseModel

        # Model attributes
        attr_accessor :channel_id
        attr_accessor :channel_member_count
        attr_accessor :channel_type
        attr_accessor :cid
        attr_accessor :created_at
        attr_accessor :first_unread_message_id
        attr_accessor :last_read_at
        attr_accessor :total_unread_count
        attr_accessor :unread_channels
        attr_accessor :unread_count
        attr_accessor :unread_messages
        attr_accessor :unread_threads
        attr_accessor :_type
        attr_accessor :last_read_message_id
        attr_accessor :team
        attr_accessor :thread_id
        attr_accessor :channel
        attr_accessor :user

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @channel_id = attributes[:channel_id] || attributes["channel_id"]
          @channel_member_count = attributes[:channel_member_count] || attributes["channel_member_count"]
          @channel_type = attributes[:channel_type] || attributes["channel_type"]
          @cid = attributes[:cid] || attributes["cid"]
          @created_at = attributes[:created_at] || attributes["created_at"]
          @first_unread_message_id = attributes[:first_unread_message_id] || attributes["first_unread_message_id"]
          @last_read_at = attributes[:last_read_at] || attributes["last_read_at"]
          @total_unread_count = attributes[:total_unread_count] || attributes["total_unread_count"]
          @unread_channels = attributes[:unread_channels] || attributes["unread_channels"]
          @unread_count = attributes[:unread_count] || attributes["unread_count"]
          @unread_messages = attributes[:unread_messages] || attributes["unread_messages"]
          @unread_threads = attributes[:unread_threads] || attributes["unread_threads"]
          @_type = attributes[:_type] || attributes["type"] || "notification.mark_unread"
          @last_read_message_id = attributes[:last_read_message_id] || attributes["last_read_message_id"] || ""
          @team = attributes[:team] || attributes["team"] || ""
          @thread_id = attributes[:thread_id] || attributes["thread_id"] || ""
          @channel = attributes[:channel] || attributes["channel"] || nil
          @user = attributes[:user] || attributes["user"] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            channel_id: "channel_id",
            channel_member_count: "channel_member_count",
            channel_type: "channel_type",
            cid: "cid",
            created_at: "created_at",
            first_unread_message_id: "first_unread_message_id",
            last_read_at: "last_read_at",
            total_unread_count: "total_unread_count",
            unread_channels: "unread_channels",
            unread_count: "unread_count",
            unread_messages: "unread_messages",
            unread_threads: "unread_threads",
            _type: "type",
            last_read_message_id: "last_read_message_id",
            team: "team",
            thread_id: "thread_id",
            channel: "channel",
            user: "user"
          }
        end
      end
    end
  end
end
