# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # Check push request
      class CheckPushRequest < GetStream::BaseModel

        # Model attributes
        # @!attribute apn_template
        #   @return [String] Push message template for APN
        attr_accessor :apn_template
        # @!attribute event_type
        #   @return [String] Type of event for push templates (default: message.new)
        attr_accessor :event_type
        # @!attribute firebase_data_template
        #   @return [String] Push message data template for Firebase
        attr_accessor :firebase_data_template
        # @!attribute firebase_template
        #   @return [String] Push message template for Firebase
        attr_accessor :firebase_template
        # @!attribute message_id
        #   @return [String] Message ID to send push notification for
        attr_accessor :message_id
        # @!attribute push_provider_name
        #   @return [String] Name of push provider
        attr_accessor :push_provider_name
        # @!attribute push_provider_type
        #   @return [String] Push provider type
        attr_accessor :push_provider_type
        # @!attribute skip_devices
        #   @return [Boolean] Don't require existing devices to render templates
        attr_accessor :skip_devices
        # @!attribute user_id
        #   @return [String]
        attr_accessor :user_id
        # @!attribute user
        #   @return [UserRequest]
        attr_accessor :user

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @apn_template = attributes[:apn_template] || attributes['apn_template'] || ""
          @event_type = attributes[:event_type] || attributes['event_type'] || ""
          @firebase_data_template = attributes[:firebase_data_template] || attributes['firebase_data_template'] || ""
          @firebase_template = attributes[:firebase_template] || attributes['firebase_template'] || ""
          @message_id = attributes[:message_id] || attributes['message_id'] || ""
          @push_provider_name = attributes[:push_provider_name] || attributes['push_provider_name'] || ""
          @push_provider_type = attributes[:push_provider_type] || attributes['push_provider_type'] || ""
          @skip_devices = attributes[:skip_devices] || attributes['skip_devices'] || false
          @user_id = attributes[:user_id] || attributes['user_id'] || ""
          @user = attributes[:user] || attributes['user'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            apn_template: 'apn_template',
            event_type: 'event_type',
            firebase_data_template: 'firebase_data_template',
            firebase_template: 'firebase_template',
            message_id: 'message_id',
            push_provider_name: 'push_provider_name',
            push_provider_type: 'push_provider_type',
            skip_devices: 'skip_devices',
            user_id: 'user_id',
            user: 'user'
          }
        end
      end
    end
  end
end
