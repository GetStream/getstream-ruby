# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class ReviewQueueItemResponse < GetStream::BaseModel

        # Model attributes
        # @!attribute _id
        #   @return [String] Unique identifier of the review queue item
        attr_accessor :_id
        # @!attribute ai_text_severity
        #   @return [String] AI-determined text severity
        attr_accessor :ai_text_severity
        # @!attribute created_at
        #   @return [DateTime] When the item was created
        attr_accessor :created_at
        # @!attribute entity_id
        #   @return [String] ID of the entity being reviewed
        attr_accessor :entity_id
        # @!attribute entity_type
        #   @return [String] Type of entity being reviewed
        attr_accessor :entity_type
        # @!attribute flags_count
        #   @return [Integer]
        attr_accessor :flags_count
        # @!attribute recommended_action
        #   @return [String] Suggested moderation action
        attr_accessor :recommended_action
        # @!attribute reviewed_by
        #   @return [String] ID of the moderator who reviewed the item
        attr_accessor :reviewed_by
        # @!attribute severity
        #   @return [Integer] Severity level of the content
        attr_accessor :severity
        # @!attribute status
        #   @return [String] Current status of the review
        attr_accessor :status
        # @!attribute updated_at
        #   @return [DateTime] When the item was last updated
        attr_accessor :updated_at
        # @!attribute actions
        #   @return [Array<ActionLogResponse>] Moderation actions taken
        attr_accessor :actions
        # @!attribute bans
        #   @return [Array<Ban>] Associated ban records
        attr_accessor :bans
        # @!attribute flags
        #   @return [Array<ModerationFlagResponse>] Associated flag records
        attr_accessor :flags
        # @!attribute languages
        #   @return [Array<String>] Detected languages in the content
        attr_accessor :languages
        # @!attribute completed_at
        #   @return [DateTime] When the review was completed
        attr_accessor :completed_at
        # @!attribute config_key
        #   @return [String]
        attr_accessor :config_key
        # @!attribute entity_creator_id
        #   @return [String] ID of who created the entity
        attr_accessor :entity_creator_id
        # @!attribute reviewed_at
        #   @return [DateTime] When the item was reviewed
        attr_accessor :reviewed_at
        # @!attribute teams
        #   @return [Array<String>] Teams associated with this item
        attr_accessor :teams
        # @!attribute activity
        #   @return [EnrichedActivity]
        attr_accessor :activity
        # @!attribute assigned_to
        #   @return [UserResponse]
        attr_accessor :assigned_to
        # @!attribute call
        #   @return [CallResponse]
        attr_accessor :call
        # @!attribute entity_creator
        #   @return [EntityCreatorResponse]
        attr_accessor :entity_creator
        # @!attribute feeds_v2_activity
        #   @return [EnrichedActivity]
        attr_accessor :feeds_v2_activity
        # @!attribute feeds_v2_reaction
        #   @return [Reaction]
        attr_accessor :feeds_v2_reaction
        # @!attribute message
        #   @return [MessageResponse]
        attr_accessor :message
        # @!attribute moderation_payload
        #   @return [ModerationPayload]
        attr_accessor :moderation_payload
        # @!attribute reaction
        #   @return [Reaction]
        attr_accessor :reaction

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @_id = attributes[:_id] || attributes['id']
          @ai_text_severity = attributes[:ai_text_severity] || attributes['ai_text_severity']
          @created_at = attributes[:created_at] || attributes['created_at']
          @entity_id = attributes[:entity_id] || attributes['entity_id']
          @entity_type = attributes[:entity_type] || attributes['entity_type']
          @flags_count = attributes[:flags_count] || attributes['flags_count']
          @recommended_action = attributes[:recommended_action] || attributes['recommended_action']
          @reviewed_by = attributes[:reviewed_by] || attributes['reviewed_by']
          @severity = attributes[:severity] || attributes['severity']
          @status = attributes[:status] || attributes['status']
          @updated_at = attributes[:updated_at] || attributes['updated_at']
          @actions = attributes[:actions] || attributes['actions']
          @bans = attributes[:bans] || attributes['bans']
          @flags = attributes[:flags] || attributes['flags']
          @languages = attributes[:languages] || attributes['languages']
          @completed_at = attributes[:completed_at] || attributes['completed_at'] || nil
          @config_key = attributes[:config_key] || attributes['config_key'] || ""
          @entity_creator_id = attributes[:entity_creator_id] || attributes['entity_creator_id'] || ""
          @reviewed_at = attributes[:reviewed_at] || attributes['reviewed_at'] || nil
          @teams = attributes[:teams] || attributes['teams'] || nil
          @activity = attributes[:activity] || attributes['activity'] || nil
          @assigned_to = attributes[:assigned_to] || attributes['assigned_to'] || nil
          @call = attributes[:call] || attributes['call'] || nil
          @entity_creator = attributes[:entity_creator] || attributes['entity_creator'] || nil
          @feeds_v2_activity = attributes[:feeds_v2_activity] || attributes['feeds_v2_activity'] || nil
          @feeds_v2_reaction = attributes[:feeds_v2_reaction] || attributes['feeds_v2_reaction'] || nil
          @message = attributes[:message] || attributes['message'] || nil
          @moderation_payload = attributes[:moderation_payload] || attributes['moderation_payload'] || nil
          @reaction = attributes[:reaction] || attributes['reaction'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            _id: 'id',
            ai_text_severity: 'ai_text_severity',
            created_at: 'created_at',
            entity_id: 'entity_id',
            entity_type: 'entity_type',
            flags_count: 'flags_count',
            recommended_action: 'recommended_action',
            reviewed_by: 'reviewed_by',
            severity: 'severity',
            status: 'status',
            updated_at: 'updated_at',
            actions: 'actions',
            bans: 'bans',
            flags: 'flags',
            languages: 'languages',
            completed_at: 'completed_at',
            config_key: 'config_key',
            entity_creator_id: 'entity_creator_id',
            reviewed_at: 'reviewed_at',
            teams: 'teams',
            activity: 'activity',
            assigned_to: 'assigned_to',
            call: 'call',
            entity_creator: 'entity_creator',
            feeds_v2_activity: 'feeds_v2_activity',
            feeds_v2_reaction: 'feeds_v2_reaction',
            message: 'message',
            moderation_payload: 'moderation_payload',
            reaction: 'reaction'
          }
        end
      end
    end
  end
end
