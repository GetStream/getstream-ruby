# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class UserDeletedEvent < GetStream::BaseModel

        # Model attributes
        # @!attribute created_at
        #   @return [DateTime]
        attr_accessor :created_at
        # @!attribute delete_conversation_channels
        #   @return [Boolean]
        attr_accessor :delete_conversation_channels
        # @!attribute hard_delete
        #   @return [Boolean]
        attr_accessor :hard_delete
        # @!attribute mark_messages_deleted
        #   @return [Boolean]
        attr_accessor :mark_messages_deleted
        # @!attribute _type
        #   @return [String]
        attr_accessor :_type
        # @!attribute user
        #   @return [User]
        attr_accessor :user

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @created_at = attributes[:created_at] || attributes['created_at']
          @delete_conversation_channels = attributes[:delete_conversation_channels] || attributes['delete_conversation_channels']
          @hard_delete = attributes[:hard_delete] || attributes['hard_delete']
          @mark_messages_deleted = attributes[:mark_messages_deleted] || attributes['mark_messages_deleted']
          @_type = attributes[:_type] || attributes['type'] || "user.deleted"
          @user = attributes[:user] || attributes['user'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            created_at: 'created_at',
            delete_conversation_channels: 'delete_conversation_channels',
            hard_delete: 'hard_delete',
            mark_messages_deleted: 'mark_messages_deleted',
            _type: 'type',
            user: 'user'
          }
        end
      end
    end
  end
end
