# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class AppResponseFields < GetStream::BaseModel

        # Model attributes
        attr_accessor :async_url_enrich_enabled
        attr_accessor :auto_translation_enabled
        attr_accessor :campaign_enabled
        attr_accessor :cdn_expiration_seconds
        attr_accessor :custom_action_handler_url
        attr_accessor :disable_auth_checks
        attr_accessor :disable_permissions_checks
        attr_accessor :enforce_unique_usernames
        attr_accessor :guest_user_creation_disabled
        attr_accessor :image_moderation_enabled
        attr_accessor :moderation_bulk_submit_action_enabled
        attr_accessor :moderation_enabled
        attr_accessor :moderation_llm_configurability_enabled
        attr_accessor :moderation_multitenant_blocklist_enabled
        attr_accessor :moderation_webhook_url
        attr_accessor :multi_tenant_enabled
        attr_accessor :name
        attr_accessor :organization
        attr_accessor :permission_version
        attr_accessor :reminders_interval
        attr_accessor :sns_key
        attr_accessor :sns_secret
        attr_accessor :sns_topic_arn
        attr_accessor :sqs_key
        attr_accessor :sqs_secret
        attr_accessor :sqs_url
        attr_accessor :suspended
        attr_accessor :suspended_explanation
        attr_accessor :use_hook_v2
        attr_accessor :user_response_time_enabled
        attr_accessor :webhook_url
        attr_accessor :event_hooks
        attr_accessor :user_search_disallowed_roles
        attr_accessor :webhook_events
        attr_accessor :call_types
        attr_accessor :channel_configs
        attr_accessor :file_upload_config
        attr_accessor :grants
        attr_accessor :image_upload_config
        attr_accessor :policies
        attr_accessor :push_notifications
        attr_accessor :before_message_send_hook_url
        attr_accessor :revoke_tokens_issued_before
        attr_accessor :allowed_flag_reasons
        attr_accessor :geofences
        attr_accessor :image_moderation_labels
        attr_accessor :datadog_info
        attr_accessor :moderation_dashboard_preferences

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @async_url_enrich_enabled = attributes[:async_url_enrich_enabled] || attributes['async_url_enrich_enabled']
          @auto_translation_enabled = attributes[:auto_translation_enabled] || attributes['auto_translation_enabled']
          @campaign_enabled = attributes[:campaign_enabled] || attributes['campaign_enabled']
          @cdn_expiration_seconds = attributes[:cdn_expiration_seconds] || attributes['cdn_expiration_seconds']
          @custom_action_handler_url = attributes[:custom_action_handler_url] || attributes['custom_action_handler_url']
          @disable_auth_checks = attributes[:disable_auth_checks] || attributes['disable_auth_checks']
          @disable_permissions_checks = attributes[:disable_permissions_checks] || attributes['disable_permissions_checks']
          @enforce_unique_usernames = attributes[:enforce_unique_usernames] || attributes['enforce_unique_usernames']
          @guest_user_creation_disabled = attributes[:guest_user_creation_disabled] || attributes['guest_user_creation_disabled']
          @image_moderation_enabled = attributes[:image_moderation_enabled] || attributes['image_moderation_enabled']
          @moderation_bulk_submit_action_enabled = attributes[:moderation_bulk_submit_action_enabled] || attributes['moderation_bulk_submit_action_enabled']
          @moderation_enabled = attributes[:moderation_enabled] || attributes['moderation_enabled']
          @moderation_llm_configurability_enabled = attributes[:moderation_llm_configurability_enabled] || attributes['moderation_llm_configurability_enabled']
          @moderation_multitenant_blocklist_enabled = attributes[:moderation_multitenant_blocklist_enabled] || attributes['moderation_multitenant_blocklist_enabled']
          @moderation_webhook_url = attributes[:moderation_webhook_url] || attributes['moderation_webhook_url']
          @multi_tenant_enabled = attributes[:multi_tenant_enabled] || attributes['multi_tenant_enabled']
          @name = attributes[:name] || attributes['name']
          @organization = attributes[:organization] || attributes['organization']
          @permission_version = attributes[:permission_version] || attributes['permission_version']
          @reminders_interval = attributes[:reminders_interval] || attributes['reminders_interval']
          @sns_key = attributes[:sns_key] || attributes['sns_key']
          @sns_secret = attributes[:sns_secret] || attributes['sns_secret']
          @sns_topic_arn = attributes[:sns_topic_arn] || attributes['sns_topic_arn']
          @sqs_key = attributes[:sqs_key] || attributes['sqs_key']
          @sqs_secret = attributes[:sqs_secret] || attributes['sqs_secret']
          @sqs_url = attributes[:sqs_url] || attributes['sqs_url']
          @suspended = attributes[:suspended] || attributes['suspended']
          @suspended_explanation = attributes[:suspended_explanation] || attributes['suspended_explanation']
          @use_hook_v2 = attributes[:use_hook_v2] || attributes['use_hook_v2']
          @user_response_time_enabled = attributes[:user_response_time_enabled] || attributes['user_response_time_enabled']
          @webhook_url = attributes[:webhook_url] || attributes['webhook_url']
          @event_hooks = attributes[:event_hooks] || attributes['event_hooks']
          @user_search_disallowed_roles = attributes[:user_search_disallowed_roles] || attributes['user_search_disallowed_roles']
          @webhook_events = attributes[:webhook_events] || attributes['webhook_events']
          @call_types = attributes[:call_types] || attributes['call_types']
          @channel_configs = attributes[:channel_configs] || attributes['channel_configs']
          @file_upload_config = attributes[:file_upload_config] || attributes['file_upload_config']
          @grants = attributes[:grants] || attributes['grants']
          @image_upload_config = attributes[:image_upload_config] || attributes['image_upload_config']
          @policies = attributes[:policies] || attributes['policies']
          @push_notifications = attributes[:push_notifications] || attributes['push_notifications']
          @before_message_send_hook_url = attributes[:before_message_send_hook_url] || attributes['before_message_send_hook_url'] || ""
          @revoke_tokens_issued_before = attributes[:revoke_tokens_issued_before] || attributes['revoke_tokens_issued_before'] || nil
          @allowed_flag_reasons = attributes[:allowed_flag_reasons] || attributes['allowed_flag_reasons'] || nil
          @geofences = attributes[:geofences] || attributes['geofences'] || nil
          @image_moderation_labels = attributes[:image_moderation_labels] || attributes['image_moderation_labels'] || nil
          @datadog_info = attributes[:datadog_info] || attributes['datadog_info'] || nil
          @moderation_dashboard_preferences = attributes[:moderation_dashboard_preferences] || attributes['moderation_dashboard_preferences'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            async_url_enrich_enabled: 'async_url_enrich_enabled',
            auto_translation_enabled: 'auto_translation_enabled',
            campaign_enabled: 'campaign_enabled',
            cdn_expiration_seconds: 'cdn_expiration_seconds',
            custom_action_handler_url: 'custom_action_handler_url',
            disable_auth_checks: 'disable_auth_checks',
            disable_permissions_checks: 'disable_permissions_checks',
            enforce_unique_usernames: 'enforce_unique_usernames',
            guest_user_creation_disabled: 'guest_user_creation_disabled',
            image_moderation_enabled: 'image_moderation_enabled',
            moderation_bulk_submit_action_enabled: 'moderation_bulk_submit_action_enabled',
            moderation_enabled: 'moderation_enabled',
            moderation_llm_configurability_enabled: 'moderation_llm_configurability_enabled',
            moderation_multitenant_blocklist_enabled: 'moderation_multitenant_blocklist_enabled',
            moderation_webhook_url: 'moderation_webhook_url',
            multi_tenant_enabled: 'multi_tenant_enabled',
            name: 'name',
            organization: 'organization',
            permission_version: 'permission_version',
            reminders_interval: 'reminders_interval',
            sns_key: 'sns_key',
            sns_secret: 'sns_secret',
            sns_topic_arn: 'sns_topic_arn',
            sqs_key: 'sqs_key',
            sqs_secret: 'sqs_secret',
            sqs_url: 'sqs_url',
            suspended: 'suspended',
            suspended_explanation: 'suspended_explanation',
            use_hook_v2: 'use_hook_v2',
            user_response_time_enabled: 'user_response_time_enabled',
            webhook_url: 'webhook_url',
            event_hooks: 'event_hooks',
            user_search_disallowed_roles: 'user_search_disallowed_roles',
            webhook_events: 'webhook_events',
            call_types: 'call_types',
            channel_configs: 'channel_configs',
            file_upload_config: 'file_upload_config',
            grants: 'grants',
            image_upload_config: 'image_upload_config',
            policies: 'policies',
            push_notifications: 'push_notifications',
            before_message_send_hook_url: 'before_message_send_hook_url',
            revoke_tokens_issued_before: 'revoke_tokens_issued_before',
            allowed_flag_reasons: 'allowed_flag_reasons',
            geofences: 'geofences',
            image_moderation_labels: 'image_moderation_labels',
            datadog_info: 'datadog_info',
            moderation_dashboard_preferences: 'moderation_dashboard_preferences'
          }
        end
      end
    end
  end
end
