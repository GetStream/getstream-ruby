# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # This event is sent when a user's message get deleted. The event contains information about the user whose messages got deleted.
      class UserMessagesDeletedEvent < GetStream::BaseModel

        # Model attributes
        # @!attribute created_at
        #   @return [DateTime] Date/time of creation
        attr_accessor :created_at
        # @!attribute custom
        #   @return [Object]
        attr_accessor :custom
        # @!attribute user
        #   @return [UserResponseCommonFields]
        attr_accessor :user
        # @!attribute type
        #   @return [String] The type of event: "user.messages.deleted" in this case
        attr_accessor :type
        # @!attribute channel_id
        #   @return [String] The ID of the channel where the target user's messages were deleted
        attr_accessor :channel_id
        # @!attribute channel_member_count
        #   @return [Integer]
        attr_accessor :channel_member_count
        # @!attribute channel_message_count
        #   @return [Integer]
        attr_accessor :channel_message_count
        # @!attribute channel_type
        #   @return [String] The type of the channel where the target user's messages were deleted
        attr_accessor :channel_type
        # @!attribute cid
        #   @return [String] The CID of the channel where the target user's messages were deleted
        attr_accessor :cid
        # @!attribute hard_delete
        #   @return [Boolean] Whether Messages were hard deleted
        attr_accessor :hard_delete
        # @!attribute received_at
        #   @return [DateTime]
        attr_accessor :received_at
        # @!attribute team
        #   @return [String] The team of the channel where the target user's messages were deleted
        attr_accessor :team
        # @!attribute channel_custom
        #   @return [Object]
        attr_accessor :channel_custom

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @created_at = attributes[:created_at] || attributes['created_at']
          @custom = attributes[:custom] || attributes['custom']
          @user = attributes[:user] || attributes['user']
          @type = attributes[:type] || attributes['type'] || "user.messages.deleted"
          @channel_id = attributes[:channel_id] || attributes['channel_id'] || ""
          @channel_member_count = attributes[:channel_member_count] || attributes['channel_member_count'] || 0
          @channel_message_count = attributes[:channel_message_count] || attributes['channel_message_count'] || 0
          @channel_type = attributes[:channel_type] || attributes['channel_type'] || ""
          @cid = attributes[:cid] || attributes['cid'] || ""
          @hard_delete = attributes[:hard_delete] || attributes['hard_delete'] || false
          @received_at = attributes[:received_at] || attributes['received_at'] || nil
          @team = attributes[:team] || attributes['team'] || ""
          @channel_custom = attributes[:channel_custom] || attributes['channel_custom'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            created_at: 'created_at',
            custom: 'custom',
            user: 'user',
            type: 'type',
            channel_id: 'channel_id',
            channel_member_count: 'channel_member_count',
            channel_message_count: 'channel_message_count',
            channel_type: 'channel_type',
            cid: 'cid',
            hard_delete: 'hard_delete',
            received_at: 'received_at',
            team: 'team',
            channel_custom: 'channel_custom'
          }
        end
      end
    end
  end
end
