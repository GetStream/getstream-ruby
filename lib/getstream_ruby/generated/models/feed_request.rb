# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class FeedRequest < GetStream::BaseModel

        # Model attributes
        attr_accessor :feed_group_id  # ID of the feed group
        attr_accessor :feed_id  # ID of the feed
        attr_accessor :created_by_id  # ID of the feed creator
        attr_accessor :description  # Description of the feed
        attr_accessor :name  # Name of the feed
        attr_accessor :visibility  # Visibility setting for the feed
        attr_accessor :filter_tags  # Tags used for filtering feeds
        attr_accessor :members  # Initial members for the feed
        attr_accessor :custom  # Custom data for the feed

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @feed_group_id = attributes[:feed_group_id] || attributes['feed_group_id']
          @feed_id = attributes[:feed_id] || attributes['feed_id']
          @created_by_id = attributes[:created_by_id] || attributes['created_by_id'] || ""
          @description = attributes[:description] || attributes['description'] || ""
          @name = attributes[:name] || attributes['name'] || ""
          @visibility = attributes[:visibility] || attributes['visibility'] || ""
          @filter_tags = attributes[:filter_tags] || attributes['filter_tags'] || nil
          @members = attributes[:members] || attributes['members'] || nil
          @custom = attributes[:custom] || attributes['custom'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            feed_group_id: 'feed_group_id',
            feed_id: 'feed_id',
            created_by_id: 'created_by_id',
            description: 'description',
            name: 'name',
            visibility: 'visibility',
            filter_tags: 'filter_tags',
            members: 'members',
            custom: 'custom'
          }
        end
      end
    end
  end
end
