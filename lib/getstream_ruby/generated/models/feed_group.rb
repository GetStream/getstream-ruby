# frozen_string_literal: true

# Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

module GetStream
  module Generated
    module Models
      # 
      class FeedGroup < GetStream::BaseModel

        # Model attributes
        # @!attribute aggregation_version
        #   @return [Integer]
        attr_accessor :aggregation_version
        # @!attribute app_pk
        #   @return [Integer]
        attr_accessor :app_pk
        # @!attribute created_at
        #   @return [DateTime]
        attr_accessor :created_at
        # @!attribute default_visibility
        #   @return [String]
        attr_accessor :default_visibility
        # @!attribute id
        #   @return [String]
        attr_accessor :id
        # @!attribute updated_at
        #   @return [DateTime]
        attr_accessor :updated_at
        # @!attribute activity_processors
        #   @return [Array<ActivityProcessorConfig>]
        attr_accessor :activity_processors
        # @!attribute activity_selectors
        #   @return [Array<ActivitySelectorConfig>]
        attr_accessor :activity_selectors
        # @!attribute custom
        #   @return [Object]
        attr_accessor :custom
        # @!attribute deleted_at
        #   @return [DateTime]
        attr_accessor :deleted_at
        # @!attribute last_feed_get_at
        #   @return [DateTime]
        attr_accessor :last_feed_get_at
        # @!attribute aggregation
        #   @return [AggregationConfig]
        attr_accessor :aggregation
        # @!attribute notification
        #   @return [NotificationConfig]
        attr_accessor :notification
        # @!attribute push_notification
        #   @return [PushNotificationConfig]
        attr_accessor :push_notification
        # @!attribute ranking
        #   @return [RankingConfig]
        attr_accessor :ranking
        # @!attribute stories
        #   @return [StoriesConfig]
        attr_accessor :stories

        # Initialize with attributes
        def initialize(attributes = {})
          super(attributes)
          @aggregation_version = attributes[:aggregation_version] || attributes['AggregationVersion']
          @app_pk = attributes[:app_pk] || attributes['AppPK']
          @created_at = attributes[:created_at] || attributes['created_at']
          @default_visibility = attributes[:default_visibility] || attributes['DefaultVisibility']
          @id = attributes[:id] || attributes['ID']
          @updated_at = attributes[:updated_at] || attributes['updated_at']
          @activity_processors = attributes[:activity_processors] || attributes['ActivityProcessors']
          @activity_selectors = attributes[:activity_selectors] || attributes['ActivitySelectors']
          @custom = attributes[:custom] || attributes['Custom']
          @deleted_at = attributes[:deleted_at] || attributes['DeletedAt'] || nil
          @last_feed_get_at = attributes[:last_feed_get_at] || attributes['LastFeedGetAt'] || nil
          @aggregation = attributes[:aggregation] || attributes['Aggregation'] || nil
          @notification = attributes[:notification] || attributes['Notification'] || nil
          @push_notification = attributes[:push_notification] || attributes['PushNotification'] || nil
          @ranking = attributes[:ranking] || attributes['Ranking'] || nil
          @stories = attributes[:stories] || attributes['Stories'] || nil
        end

        # Override field mappings for JSON serialization
        def self.json_field_mappings
          {
            aggregation_version: 'AggregationVersion',
            app_pk: 'AppPK',
            created_at: 'created_at',
            default_visibility: 'DefaultVisibility',
            id: 'ID',
            updated_at: 'updated_at',
            activity_processors: 'ActivityProcessors',
            activity_selectors: 'ActivitySelectors',
            custom: 'Custom',
            deleted_at: 'DeletedAt',
            last_feed_get_at: 'LastFeedGetAt',
            aggregation: 'Aggregation',
            notification: 'Notification',
            push_notification: 'PushNotification',
            ranking: 'Ranking',
            stories: 'Stories'
          }
        end
      end
    end
  end
end
